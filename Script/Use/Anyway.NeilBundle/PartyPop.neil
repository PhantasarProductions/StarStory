// License Information:
// src/Tricky Script/Script/Use/Anyway.NeilBundle/PartyPop.neil
// Version: 21.02.27
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
group PPop

	get var mb
		return Lua.Neil.Globals.gv.gbool
	end
	
	get bool Popped
		return mb.Party_Popped
	end
	set bool Popped
		mb.Party_Popped=value
	end
	
	get bool Unpopping
		return mb.Party_Popped_Undo
	end
	set bool Unpopping
		mb.Party_Popped_Undo=value
	end
	
	Void Pop(string apref,string wind,instant)
		Popped=true
		Unpopping=false
		for i=1,6
			if RPGParty[i] && RPGParty[i]!=""
				string pch="PartyPopped_"..RPGParty[i]
				string popto=apref.."_"..RPGParty[i]
				Map.ObjSet("PLAYER","Visible",false)
				if instant
					Map.Spawn(pch,popto)
					Map.ObjSet(pch,"Texture",sprintf("GFX/Actors/Player/%s.%s.jpbf",RPGParty[i],wind))
				else
					Map.Spawn(pch,"PLAYER")
					Map.ObjSet(pch,"Texture",sprintf("GFX/Actors/Player/%s.%s.jpbf",RPGParty[i],wind))
					Map.ObjWalkTo(Pch,popto)
				end
			end
		end
	end
	
	void UnPop(Instant)
		if !Popped
			return
		end
		for i=1,6
			if RPGParty[i] && RPGParty[i]!=""
				string pch="PartyPopped_"..RPGParty[i]
				if instant
					Map.Kill(pch)
				else
					Map.ObjWalkto(Pch,"PLAYER")
				end
			end
		end
		UnPopping=true
		CSay("UnPopping begun!")
	end
	
	void UnPopCheck()
		CSay("Unpopping cycle!")
		bool Clear = true
		for i=1,6
			if RPGParty[i] && RPGParty[i]!=""
				string pch="PartyPopped_"..RPGParty[i]
				Clear = Clear && (!Map.ObjBool(PCh,"Walking"))
				CSayF("Unpopcheck %d; Clear: %s",i,Lua.tostring(Clear))
			end
		end
		// If clear, remove all popped actors
		if Clear
			for i=1,6
				if RPGParty[i] && RPGParty[i]!=""
					string pch="PartyPopped_"..RPGParty[i]
					Map.Kill(pch)
				end
			end
			Map.SetObj("PLAYER","Visible",true)
		end			
		UnPopping = !Clear
		Popped=Unpopping
		if Clear
			CSay("Unpopping complete!")
		end
	end
	
end