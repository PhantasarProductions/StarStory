#use "Libs/XMath"
#use "Libs/LinkedList"

Class Rock
	ReadOnly Int StuiterHoogte
	ReadOnly Int StuiterBase
	ReadOnly Int SpeedX
	ReadOnly Int SpeedStuiter
	ReadOnly Int SpeedDeg
	Int Stuiter
	Int _Deg
	Int _X
	
	Get Int X
		_X += SpeedX
		Return _X
	End
	
	Get Int Y
		Stuiter += SpeedStuiter
		return Screen.H - 100 - StuiterBase - math.floor( math.abs(xmath.sin(Stuiter)) * StuiterHoogte)
	End
	
	Get Int Deg
		_Deg += SpeedDeg
		Return _Deg
	End
	
	Get Bool Ended
		If SpeedX<0
			Return _X<-50
		Else
			Return X>Screen.W+50
		End
	End
	
	Constructor
		StuiterBase = math.random(5,Screen.H Div 5)
		StuiterHoogte = math.random(Screen.H Div 10,Screen.H Div 2)
		SpeedX = math.random(5,150)
		SpeedStuiter = math.random(1,8)
		SpeedDeg = math.random(1,3)
		If math.random(1,2)==1
			SpeedX = 0-SpeedX
			_X = Screen.W + 20
		Else
			_X = -20
		End
	End
	
	ReadOnly Static Var Lijst = New LinkedList()
	Static Void Initiate()
		Int A = Math.Random(25,500)
		For I=0,A
			Lijst.AddLast(New Rock())
		End
	End
	
	ReadOnly Static Var Img = Image.LoadNew("GFX/Inventory/Rock.png","SPELLANI_ROCK")
	
	Void Draw()
		Img.Draw(X,Y)
	End
	
	Static Void DrawAll()
		For R,L in Lijst.Each
			R.Draw()
			If R.Ended
				L.UnLink()
			ENd
		End
	End
	
	Static Get Bool AllDone
		Return Lijst.Empty
	End
	
End


Module
	Void Start()
		Rock.Initiate()
	End
	
	Void Draw()
		Rock.DrawAll()
	End
	
	Void Update()
	End
	
	Get Bool Ended
		Return Rock.AllDone
	End
	
End