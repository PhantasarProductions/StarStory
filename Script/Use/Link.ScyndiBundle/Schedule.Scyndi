// License:
// **********************************************
// 
// src/Script/Script/Use/Link.ScyndiBundle/Schedule.Scyndi
// (c) Jeroen Broks, 2020, 2021, 2025, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// 
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// 
// version: 25.01.23
// 
// End License


module

#use "Libs/SCI/Sys"

	//void MCall(string func,a,b,c,d,e,f,g,h)
	//	string pr
	//	for i,p in ipairs {a,b,c,d,e,f,g,h}
	//		if i>1 
	//			pr += ", "
	//		end
	//		switch lua.type(p)
	//			case "string"
	//				pr += "\""..p.."\""
	//			case "number" "boolean"
	//				pr += tostring(p)
	//			default
	//				lua.error("Illegal MCall type "..lua.type(p))
	//		end
	//	end
	//	if pr=="" 
	//		pr = "nil"
	//	end
	//	State.Call("FLOW_FIELD",func,pr)
	//end
	Void MCall(String func,infinity)
		Sys.Call("FLOW_FIELD",func,infinity)
	End

	void WaitForMovingActors(string After = "")
		MCall("GrSchedule.WaitForMovingActors",After)
	end
	
	void Add(string scriptfunction)
		MCall("GrSchedule.Schedule",scriptfunction)
	end
	
	Void Flush()
		MCall("GrSchedule.Scheduled.Clear")
	End
	
	Void Stop(string C="")
		MCall("GrSchedule.StopIt",C)
	End
	
//end
