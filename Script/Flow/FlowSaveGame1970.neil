// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Flow/FlowSaveGame1970.neil
// (c) Jeroen Broks, 2021, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 21.03.27
// End License Information
#use "Libs/Dim2"
#use "Script/Use/Anyway"
#use "Script/Use/Misc/PSaveGame"

#macro maxsg 1000

#macro _LOCATE x,y = 
#macro _REV fg,bg = 2,127
#macro _NORM bg,fg = 2,127
#macro _BOLD bg,fg = 2,255

class Pos
	int ch
	int fg
	int bg
end

group FSG1970
	var Scr = new Dim2("var",80,25)
	//var Fnt = Image.LoadNew("GFX/PC Font/Font0.jpbf","PC-Font")
	table Fnt = {}
	var Mouse = Image.Obtain("MOUSE")
	
	int x = 0
	int y = 0
	int fg = 127
	int bg = 2
	int scroll = 0
	
	int pmx
	int pmy
	
	
	get int MX
		return Events.MouseX()
	end
	get int MY
		return Events.MouseY()
	end
	
	#region Fake the old XT computer routines
	void Cls(string hoezo="")
		Scr.Clear()
		x=0
		y=0
		if hoezo!=""
			CSayF("Cls: %s",hoezo)
		end
	end
	
	void PutChar(int Ch,int ax,int ay)
		var P = Scr.GetValue(ax,ay)	
		if !P
			P = new Pos()
			Scr.SetValue(ax,ay,P)
			CSayF("PutChar.Create(%02d,%02d,%03d.%02x)",ax,ay,ch,ch)
		end
		P.ch = Ch
		P.fg = fg
		P.bg = bg
	end
	
	
	void Write(string A)
		for i=1,#A
		#if oldmethod
			if !Scr.GetValue(x,y)
				Scr.SetValue(x,y,new Pos())
			end
		#endif

			int byt = Lua.string.byte(Mid(A,i,1))
			if byt==10
				x=0
				y=(y+1)%25
			else
				#if oldmethod
				var P = Scr.GetValue(x,y)
				P.ch = byt
				P.fg = fg
				P.bg = bg
				#fi
				self.PutChar(byt,x,y)
				x++
				if x>=80
					x=0
					y=(y+1)%25
				end
			end					
		end
	end
	
	
	void WriteLn(string A)
		Write(A.."\n")
	end
	
	void WriteF(string fmt,a,b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,s,t,u,v,w,x,y,z)
		Write(sprintf(fmt,a,b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,s,t,u,v,w,x,y,z))
	end
	
	void DrawScreen()
		Graphics.Cls()
		//int s = (Screen.H - 100) div 9
		int s = math.min( (Screen.H - 100) div 25,Screen.W div 80 )
		pmx = mx div s
		pmy = my div s
		for ix,iy,ic in Scr.Serial
			//CSayF("Drawing (%d,%d)...",ix,iy) // DEBUG ONLY!!!
			if ic
				bg=ic.bg
				fg=ic.fg
				if MX>=ix*s && MX<(ix+1)*s && MY>=iy*s && MY<(iy+1)*s
					bg=ic.fg
					fg=ic.bg
				end
				Graphics.Color(0,bg,0)
				Graphics.Rect(ix*s,iy*s,s,s)
				Graphics.Color(0,fg,0)
				// Graphics.Line(ix*s,iy*s,(ix+1)*s,(iy+1)*s) // DEBUG ONLY
				//Fnt.Stretch(ix*s,iy*s,s,s,ic.ch)
				if !Fnt[ic.ch]
					switch ic.ch
						case 0
							CSayF("PC: Loading character %03d/%08X > %s",ic.ch,ic.ch,"NULL")
						case '"'
							CSayF("PC: Loading character %03d/%08X > %s",ic.ch,ic.ch,"DOUBLE QUOTE!")
						default
							CSayF("PC: Loading character %03d/%08X > %s",ic.ch,ic.ch,chr(ic.ch))
					end
				end
				Fnt[ic.ch] = Fnt[ic.ch] || Image.LoadNew(sprintf("GFX/PC Font/Font.jpbf/%08X.png",ic.ch),sprintf("PCFNT%02X:%03d",ic.ch,ic.ch))
				Fnt[ic.ch].Stretch(ix*s,iy*s,s,s)
			else
				Graphics.Color(0,2,0)
				//Graphics.Color(0,0,255)
				if MX>=ix*s && MX<(ix+1)*s && MY>=iy*s && MY<(iy+1)*s
					Graphics.Color(0,127,0)
				end				
				Graphics.Rect(ix*s,iy*s,s,s	)		
			end			
		end
		Party.Boxes()
		if MY>Screen.H-100
			Mouse.Draw(MX,MY)
		end
	end
	
	Bool Boot(reset)
		static int b = 0
		if reset
			Cls()
			CSay("Boot - RESET!")
			b=0
			return false
		end
		//CSayF("%03d 'KB' checked! -> real value %04d",math.min(512,b),b)
		if b>1200
			if b>1290
				return true
			end
			Cls()
			b++
			DrawScreen()
			return false
		end
		x,y=0,0
		WriteLn("Narcissus - Computer systems")
		WriteF("%4d KB Checked",math.min(512,b))
		DrawScreen()
		//Graphics.Flip()
		//FPS.WaitMinTicks()
		//FPS.Sleep(2)		
		b+=8
		return false
	End
	#endregion
	
	#region Get Savegame Info	
	table GetSlot(int i)
		static table slots = {}		
		if !slots[i]
			CSayF("Retrieving slot: %d",i)
			table h = GetHeader(i)
			table nr
			nr.have = h.Map!=nil
			nr.header = h
			slots[i] = nr
			// print(Serialize("SaveGameSlots",slots))
		end
		return slots[i]
	end
	#endregion

	
	void SGFlow()	
		bool Click = Events.MouseHitLeft()
		Dev.ToConsole()
		if !Boot()
			return
		end
		_Locate 5,1
		_Rev
		Write("STAR STORY - SAVE GAME")
		_Norm
		for i=scroll,math.min(scroll+20,maxsg)
			table slot = GetSlot(i)
			int sy = 3+(i-scroll)
			_locate 5,sy
			if sy==pmy && pmx<75
				_Bold
				if Click
					Cls()
					WriteLn("Saving...")
					DrawScreen()
					Graphics.Flip()
					Events.Poll()
					PerformSaveGame(GetSGFileName(i))
					Flow.GoToFlow("FIELD")
					return
				end
			else
				_Norm
			end
			if slot.have				
				WriteF("%s - %s lv %d",slot.header.Map,slot.header.Protagonist,slot.header.ProtaLevel)
			else
				Write("---")
			end
		end
		PutChar(30,79, 0)
		PutChar(31,79,24)
		DrawScreen()
		if Click && pmx==79
			switch pmy
				case 0
					scroll = math.max(0,scroll-1)
					Cls()
				case 24
					scroll = math.min(maxsg,scroll+1)
					Cls()
				default
			end
		end
	end
	
	Constructor
		var s
		s = SaveGame.LoadIndieString("Star Story - Scroll")	
		CSayF("Getting scroll: %s",lua.tostring(s))
		scroll = lua.tonumber(s or "0") or 0
	end
end

global readonly delegate Apollo_Flow = FSG1970.SGFlow