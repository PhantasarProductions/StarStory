// License:
// 	  src/Script/Script/Flow/FlowNewGame.scyndi
// 
// 	  Version: 24.12.17 I
// 	
// 	  Copyright (C) 2020, 2021, 2024 Jeroen Petrus Broks
// 	
// 	  ===========================
// 	  This file is part of a project related to the Phantasar Chronicles or another
// 	  series or saga which is property of Jeroen P. Broks.
// 	  This means that it may contain references to a story-line plus characters
// 	  which are property of Jeroen Broks. These references may only be distributed
// 	  along with an unmodified version of the game.
// 
// 	  As soon as you remove or replace ALL references to the storyline or character
// 	  references, or any termology specifically set up for the Phantasar universe,
// 	  or any other univers a story of Jeroen P. Broks is set up for,
// 	  the restrictions of this file are removed and will automatically become
// 	  zLib licensed (see below).
// 
// 	  Please note that doing so counts as a modification and must be marked as such
// 	  in accordance to the zLib license.
// 	  ===========================
// 
// 
// 	  zLib license terms:
// 	
// 	  This software is provided 'as-is', without any express or implied
// 	  warranty.  In no event will the authors be held liable for any damages
// 	  arising from the use of this software.
// 
// 	  Permission is granted to anyone to use this software for any purpose,
// 	  including commercial applications, and to alter it and redistribute it
// 	  freely, subject to the following restrictions:
// 	
// 	  1. The origin of this software must not be misrepresented; you must not
// 	     claim that you wrote the original software. If you use this software
// 	     in a product, an acknowledgment in the product documentation would be
// 	     appreciated but is not required.
// 	  2. Altered source versions must be plainly marked as such, and must not be
// 	     misrepresented as being the original software.
// 	  3. This notice may not be removed or altered from any source distribution.
// End License


Script

#use "Libs/SCI/Sys"
#use "Libs/SCI/Events"
#use "Libs/SCI/Graphics" 
#use "Libs/SCI/InterVar"

#use "Script/Use/Link"
#use "Script/Use/Anyway"

#use "Script/Use/Convert/Flow"
#use "Script/Use/Convert/ViesBah"
#use "Script/Use/Convert/RPG2Stat"

extern Screen "Scyndi.Class.Graphics"


// Game Jolt will NOT be supported, so these Macros don't have to be redone!
//#macro GJUser gv.str["GameJolt.User"]
//#macro GJToken gv.str["GameJolt.Token"]

#undef allow_gamejolt

const var NGFont = ObtainFont("BOXTEXT")
const var Stars = LoadNewImage("GFX/Intro/Starfield.png","STARFIELD")
const var Mouse = ObtainImage("MOUSE")


class NGStage

	readonly bool Keyboard
	
	readonly delegate KeysAllowed
	readonly delegate MyFlow
	
	
	static int Stage = 1
	static table Stages
	
	CONSTRUCTOR(kb, ka, mf)
		Keyboard = kb!=false && kb!=nil
		KeysAllowed = ka
		MyFlow = mf
	end
	
	static void NewStage( kb, ka, mf)
		Stages += new NGStage(kb,ka,mf)
	end

end

group Keyboard
	const int xmargin = 10
	const int size = 50
	const int space = 5
	int HitKey 	
	get string HitChar
		if HitKey==0
			return  ""
		elseif HitKey==8
			return "BACKSPACE"
		else
			return Chr(HitKey)
		end
	end
	
	void Show(allow)
		int x = 10
		int y = 100
		HitKey = 0
		for i=33,126
			bool allowed = true
			if (allow) 
				allowed = allow(i)
			end
			__black
			Graphics.Rect(x,y,size,size)
			__ember
			Graphics.Rect(x,y,size,size,true)
			if (!allowed)
				__red
			else
				__skyblue
				if Events.KeyHit(i) or (Events.MouseHitLeft and Events.MouseX()>x and Events.MouseY>y and Events.MouseX()<x+size and Events.MouseY<y+size)
					HitKey = i
				end
			end
			NGFont.Text(chr(i),x+(size/2),y+(size/2),2,2)
			x += size+space
			if x+size+xmargin>Screen.W
				x = xmargin
				y += size+space
			end
		end
		y+=size+space
		x=xmargin
		__black
		Graphics.Rect(x,y,size*2,size)
		__ember
		Graphics.Rect(x,y,size*2,size,true)
		__skyblue
		NGFont.Text("<-",x+size,y+(size/2),2,2)
		if Events.KeyHit(Key.Backspace) or (Events.MouseHitLeft and Events.MouseX()>x and Events.MouseX()<x+(size*2) and Events.MouseY>y and Events.MouseY<y+size)
			HitKey=8
		end
		x+=(size*2)+space
		__black
		Graphics.Rect(x,y,Screen.W-(size*2)-space-(xmargin*2),size)
		__ember
		Graphics.Rect(x,y,Screen.W-(size*2)-space-(xmargin*2),size,true)
		if Events.KeyHit(32) or (Events.MouseHitLeft and Events.MouseX()>x and Events.MouseX()<Screen.W-(xmargin*2) and Events.MouseY>y and Events.MouseY<y+size)
			HitKey=32
		end
		
	end
end

void Stage1()
	__red
	NGFont.Text("Welcome to Star Story!",5,5)
	__skyblue
	NGFont.Text("Before we begin our journey through the Galaxy",5,40)
	NGFont.Text("I first need to ask you a few questions!",5,70)
	NGFont.Text("Please note that the entire flow of the game is",5,100)
	NGFont.Text("affected by your answers, and therefore, it is",5,130)
	NGFont.Text("not possible to change any setting later!",5,160)
	NGFont.Text("When you are ready to move on,",5,200)
	NGFont.Text("Click anywhere on the screen!",5,230)
	if Events.MouseHitLeft
		NGStage.Stage++
	end
end

// Stage #2 was about allowing to use the Game Jolt API.
// Since I broke all my ties with Game Jolt, there's no more need
// for the link-up to the API either.
// In order to to confuse the Scyndi Compiler this entire portion has therefore 
// been removed. (The original .neil code has been archived)

void Difficulty()
	static table skills = { [1]="Noob", [2]="Casual", [3]="No-Life Gamer" }
	__red
	NGFont.Text("What kind of gamer are you?",5,5)
	__ember
	NGFont.Text("Please note, due to the big differences between the",5,60)
	NGFont.Text("difficulty settings, you cannot change this setting",5,100)
	NGFont.Text("afterwards, so make your choice wisely!",5,140)
	for i,sk in pairs(skills)
		__skyblue
		int ypos = 200+(i*30)
		if Events.MouseY>ypos and Events.MouseY<ypos+30
			if Events.MouseHitLeft
				if Events.Yes(sprintf("You chose the '%s' difficulty!\nYou cannot change this later!\nAre you sure?",skills[i])) 
					gint.Skill = i
					NGStage.Stage++
				end
			end
			Graphics.Rect(0,ypos,Screen.W,30)
			__black
		end
		NGFont.Text(sk,Screen.W/2,ypos,2,0)
	end
end

void Language()
	static table langs = { ["NL"] = "Dutch", ["EN"] = "English" }
	__red 
	NGFont.Text("What language do you want?",5,5)
	__ember
	NGFont.Text("Your choice will only affect the written scenario text",5,60)
	NGFont.Text("system messages, item and ability names and so on will",5,100)
	NGFont.Text("regardless of your choice remain in English!",5,140)
	int y = 200
	for k,v in SPairs(Langs)
		__skyblue
		if Events.MouseY>y and Events.MouseY<y+30
			if Events.MouseHitLeft
				gstr.Lang = v
				NGStage.Stage++
			end
			Graphics.Rect(0,y,Screen.W,30)
			__black
		end
		NGFont.Text(v,Screen.W/2,y,2,0)
		y += 40
	end
end

void BuckleUp()
	__red
	NGFont.Text("And that's all I need to know!",5,5)
	__skyblue
	NGFont.Text("Now buckle up for this exciting space adventure",5,40)
	NGFont.Text("Click anywhere on the screen!",5,230)
	if Events.MouseHitLeft
		Loading()
		gint.Cycle = 1
		Party.NewChar("UniWendicka",1,"Wendicka")
		Party.NewChar("UniCrystal",1,"Crystal")
		Party.NewChar("Briggs",20)
		RPGParty.Max = 6
		RPGParty[1] = "UniWendicka"
		RPGParty[2] = "UniCrystal"
		RPGParty[3] = "Briggs"	
		Flow.Load("FIELD","Script/Load/LoadField.lbc")
		//Map.LoadMap("Intro_Ship_Transporter")
		//Map.Layer="INTRO"		
		//Map.Schedule("LovejoyIntro")
		//var O = Kthura.Map("GAMEMAP").Layer("INTRO").Obj("Stars")
		//O.W = Screen.W
		//O.H = Screen.H		
		//Flow.Current="Field"
		Lua.error("Sorry folks! This part is not yet done!")
	end
end


init
	CSay("Let's prepare a new game")
	//CSayF("Game directory is in: %s",Core.PKGDir)
	NGStage.NewStage(false,nil,Stage1)
	NGStage.NewStage(false,nil,Difficulty)
	NGStage.NewStage(false,nil,Language)
	NGStage.NewStage(false,nil,BuckleUp)
	gstr.Start = OS.date()
end

global void MainFlow()
	// Dev
	// Dev.ToConsole() // Automated in SCI
	// Mouse pointer
	int mx = Events.MouseX
	int my = Events.MouseY
	Graphics.Color(255,255,255)
	// Stars
	Stars.Tile(0,0,Screen.W,Screen.H)
	// Stage
	NGStage.Stages[NGStage.Stage].MyFlow()
	if NGStage.Stages[NGStage.Stage].Keyboard
		Keyboard.Show()
	end
	// Debug only
	// FPS.Show(5,5)
	// Must be very last
	Graphics.Color(255,255,255)
	Mouse.Draw(mx,my)
end
