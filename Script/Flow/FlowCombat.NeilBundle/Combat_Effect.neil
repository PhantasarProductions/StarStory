// License Information:
// src/Tricky Script/Script/Flow/FlowCombat.NeilBundle/Combat_Effect.neil
// Version: 21.02.01
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Group CG_Effect

	bool HitCheck(Act,Tar)
		// TODO: Miss chance for Crystal's ARMS
		// Accuracy check on normal attacks (if applicable)
		if Act.Act.Dodgable
			// Original script from the original game. Dummied for reference purposes
			// local ach = Fighters[ag][ai].Tag
			// local tch = Fighters[tg][ti].Tag
			// local acc = RPGStat.Stat(ach,"END_Accuracy")
			// local eva = RPGStat.Stat(tch,"END_Evasion")
			// local hit = rand(0,acc) -- acc + rand(1,math.ceil(acc*.75))
			//local ddg = rand(1,eva) -- eva - rand(1,math.ceil(eva*.25))
			// return ddg>hit
			int acc = Act.Executor.Accuracy
			int eva = Act.Tar.Evasion
			int hit = math.random(0,acc)
			int ddg = math.random(0,ddg)
			// Original game did "true" if the attack was sucessfully dodged... But here I require "true" when the attack succesfully hit!
			return !(ddg>hit)
		end
		return true
	end

	// Cure Status Changes
	bool Cure(Act,Tar) 
		// TODO: Code
	end
	
	bool Attack(Act,Tar)
		// TODO: Code
	end
	
	Bool CureOnAttack(Act,Tar)
		// TODO: Code
	end
	
	
	bool Heal(Act,Tar)
		// Please note that this is only for absolute and percent healing
		// After all, the stat based healing is an attack disguised as healing
		// TODO: Code
	end
	
	bool Script(Act,Tar)
		// TODO: Script
	end
	
	// Cause status changes
	bool Cause(Act,Tar)
		// TODO: Code
	end
	
	void Effect(Act,Tar)
		CSayF("= Effect: %s; Target %s; Executor: %s",Act.Act.Name,Tar.Tag,Act.Executor.Tag)
		bool Hit = false
		if HitCheck(Act,Tar)
			Hit = Cure(Act,Tar) || Hit
			Hit = Heal(Act,Tar) || Hit
			Hit = Attack(Act,Tar) || Hit
			Hit = CureOnAttack(Act,Tar) || Hit
			Hit = Script(Act,Tar) || Hit
			Hit = Cause(Act,Tar) || Hit
		end
		if not Hit
			CSayF("Target %s has been missed for %s by %s",Tar.Tag,Act.Act.Name,Act.Executor.Tag)
			Tar.Hurt("Miss!")
		end
	end

	void EffectAll(Act)
		CSayF("Let's go to effect for '%s' by %s",Act.Act.Name,Act.Executor.Tag)
		for tar in Act.EachTarget
			Effect(Act,tar)
		end
	end

End

Return CG_Effect