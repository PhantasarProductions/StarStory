// License Information:
// src/Tricky Script/Script/Flow/FlowCombat.NeilBundle/Combat_Class_Action.neil
// Version: 21.01.21
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Class Class_Action
	Static Var Fighters
	
	bool UseCommonAmmo
	bool UseARMAmmo
	int ConsumeItem = -1
	int BurnAP = 0
	
	ReadOnly String Executor_Tag
	get var Executor
		return Fighters[Executor_Tag]
	end
	
	ReadOnly Table Targets_Tag
	ReadOnly Table Targets
	
	ReadOnly String ActTag
	ReadOnly Var Act
	
	int _ActSpeed
	set int ActSpeed
		_ActSpeed = math.max(1,value)
	end
	get int ActSpeed
		return _ActSpeed
	end
	
	Constructor(string Exe,String A_ActTag)
		Executor_Tag = Exe
		Targets_Tag = {}
		ActTag = A_ActTag
		Act = Item[ActTag]
		
		var TGT_GET(s,int idx)
			return Fighters[Targets_Tag[idx]]
		end
		void TGT_SET(s,int idx,var ch)
			Fighters[Targets_Tag[idx]]=ch.Tag
		end
		Targets = Lua.setmetatable({},{["__index"]= TGT_GET,["__newindex"]=TGT_SET})
		
	end
End