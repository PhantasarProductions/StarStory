// License Information:
// src/Tricky Script/Script/Flow/FlowCombat.NeilBundle/Combat_Class_Fighter.neil
// Version: 21.01.22
// Copyright (C) 2020, 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
class Combat_Fighter
	// string Tag // All same pointer?
	
	// Override these!
	get int X
		Lua.error("Hey! You can't access Combat_Fighter.X like that!")
		return 0
	end 
	get int Y
		Lua.error("Hey! You can't access Combat_Fighter.T like that!")
		return 0
	end 
	get bool Available
		return false
	end
	get string Team
		return "Unknown"
	end
	
	abstract void Draw()
	abstract void TIcon(int x,int y)
	
	// And these should not be overridden
	get table Char
		return RPGChar[self.Tag]
	end
	
	get int HP
		return Char.Points.HP.Have
	end
	set int HP
		Char.Points.HP.Have=value
	end
	get int MaxHP
		return Char.Points.HP.Maximum
	end
	get int Ammo
		return Char.Points.Ammo.Have
	end
	set int Ammo
		Char.Points.Ammo.Have=value
	end
	get int MaxAmmo
		return Char.Points.Ammo.Maximum
	end
	get int AmmoMax
		return Char.Points.Ammo.Maximum
	end
	
	get string Name
		return Char.Name
	end
	
	// Position on the time gauge
	int Gauge = 0
		
	
	table Stats = nil
	table Buffs = nil
	void InitStats()
		int StatIndex(s,string key)
			return Char.Stat["END_"..key]
		end
		void StatNewIndex(s,string key,int v)
			Lua.error(sprintf("You cannot assing value %d to Combat_Fighter.%s.Stat.%s because it's read-only!",v,self.Tag,key))
		end
		int BuffIndex(s,string key)
			return Char.Stat["BUFF_"..key]
		end
		void BuffNewIndex(s,string ket, int v)
			Char.Stat["BUFF_"..key]=v
		end
		Stats = setmetatable({},{["__index"]=StatIndex,["__newindex"]=StatNewIndex})
		Buffs = setmetatable({},{["__index"]=BuffIndex,["__newindex"]=BuffNewIndex})
		CSayF("Metatables set for stats and buffs at character '%s'",self.Tag)
	end
	
	var NextAct = nil
	
	static readonly table Fighters
	static void Add(obj)
		Fighters[obj.Tag] = obj
	end
end