// License Information:
// src/Tricky Script/Script/Flow/FlowCombat.NeilBundle/Combat_Heroes.neil
// Version: 21.01.20
// Copyright (C) 2020, 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
class Combat_Hero extends Combat_Fighter

	readonly static int midx = math.floor(Screen.W/2)
	readonly static int midx4 = math.floor((Screen.W/2)/4)
	readonly static int midy = math.floor((Screen.H-120)/2)
	readonly static int midy4 = math.floor(((Screen.H-120)/2)/4)
	
	string Tag
	string GITag
	var GIIMG
	table InputItems

	get int PartyIndex
		for i=1,6
			if RPGParty[i]==self.Tag
				return i
			end
		end
		return 0
	end
	
	get bool Available
		return PartyIndex>0 and PartyIndex<6
	end
	get bool Targetable_Hero
		return Available
	end
	get bool Targetable_Foe
		return Targetable_Hero and self.HP>0
		// On the moment this code was written a bug in Neil requires me to use "self" when using identifiers from the base class when extending classes
	end
	
	get string Team
		return "Hero"
	end
	
	get int X
		return midx + (midx4*PartyIndex)
	end
	
	get int Y
		return midy + (midy4*PartyIndex)
	end
	
	get int Level
		return self.Char.Stat.Level
	end
	
	string State = "Idle"
	readonly table Images
	get var GetImage
		CSay("Getting combat sprite for "..Tag.." in state "..State)
		var ret = Image.Loadnew("GFX/Combat/Fighters/Hero/"..self.Tag.."."..State..".png","CombatHero_"..self.Tag.."_"..State)
		ret.HotBottomCenter()
		return ret
	end
		
	
	void Draw()
		Graphics.Scale(2,2)
		Images[State] = Images[State] or GetImage
		Images[State].Draw(X,Y)
		Graphics.Scale(1,1)
	end
	
	CONSTRUCTOR
		Images = {}
	end

end


group Stage_PlayerInput
	var Fighter
	var Fighters
	ReadOnly var Top
	ReadOnly Var Bottom
	ReadOnly Var Item
	ReadOnly Var Sides
	string Tag
	readonly var Signal
	readonly var ItFont
	int Height
	int PartyPos
	string Hover
	
	get var PWidth
		return Screen.W/4
	end
	
	get var Hero
		return Fighter.Fighters[Tag]
	end
	
	get var MPos
		return ((PartyPos-1)*PWidth)+math.floor(PWidth/2)-100
	end
	
	get int MX
		return events.mousex()
	end
	
	get int MY
		return events.mousey()
	end
	
	Void ComeToMe(String ToTag)
		Tag = ToTag
		Stage.Current = self
		Signal.Play()
		Height = #Hero.InputItems * 52
		PartyPos = 0
		for i=1,3
			if RPGParty[i]==ToTag
				PartyPos = i
			end
		end
		Lua.assert(PartyPos!=0,"Party member " .. ToTag .. " not found on front row!")
	End
	
	Void Draw()
		int by = Screen.H-228
		int sy = by - Height
		__white
		Bottom.Draw(MPos,by)
		Sides.Stretch(MPos,sy,200,Height)
		Top.Draw(MPos,sy-16)
		Hover = ""
		for i,cmd in ipairs(Hero.InputItems)
			__white
			int iy = sy+((i-1)*52)
			Item.Draw(MPos+12,iy)
			Graphics.Color(0,180,255)
			if MX>MPos && MX<MPos+200 && MY>iy && MY<iy+52
				Hover = cmd
				Graphics.Color(0,255,255)
			end
			itFont.Text(cmd,mPos+100,sy+((i-1)*52)+26,2,2)
		end	
	End
	
	Void Update()
	End
	
	Constructor
		itFont = ImageFont.Obtain("BIGTEXT")
		Signal = Audio.Obtain("SIGNAL")
		For PI In Each {"TOP","BOTTOM","ITEM","SIDES"}
			self[PI]=Image.Obtain("COMBAT_PLAYINPUT_"..PI)
		End
	end
end


module 
	var Fighters
	void Compile()
		CSay("Setting up hero party")
		for i=1,6
			if RPGParty[i] and RPGParty[i]!=""
				string T = RPGParty[i]
				CSayF("Adding hero: %s",T)
				var H = new Combat_Hero() 
				H.Tag = T
				H.GITag = sPrintF("GAUGEICON_HERO_%s",T)
				Fighters.Add(H)
				CSayF("= Party index: %d",H.PartyIndex)
				CSayF("= Available:   %s",tostring(H.Available))
				CSayF("= Tag:         %s",H.Tag)
				CSayF("= Team:        %s",H.Team)
				CSayF("= Position     (%d,%d)",H.X,H.Y)
				H.InitStats()
				H.Gauge = Lua.math.random(900/__skill,9000/__skill)
				//H.InputItems = Lua.Neil.Use("Script/Data/Char/CombatMenu/"..T..".Neil")
				H.InputItems = Lua.Neil.Use("Script/Data/Char/CombatMenu/"..T)
			end
		end
	end
end