// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Flow/FlowHawk.neil
// (c) Jeroen Broks, 2021, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 21.02.23
// End License Information
class HData
	string Name
	string Map
	string Layer
	string Spot
	Constructor(string N,M,L,S)
		Name  = N
		Map   = M
		Layer = L
		Spot  = S
	end
end

group flHawk
	
	table HawkData = {}
	
	void Save()
		string ret = "Init\n\tflHawk.HawkData = {}\n\n"
		
		for world,wlist in spairs(HawkData)
			ret += sprintf("\tflHawk.HawkData[\"%s\"] = {}\n",World)
			for node,nd in spairs(wlist)
				ret += sprintf("\tflHawk.HawkData[\"%s\"][\"%s\"] = new HData(\"%s\",\"%s\",\"%s\",\"%s\")\n",World,node, nd.Name,nd.Map,nd.Layer,nd.Spot)
			end
		end
		ret += "end"
		SaveGame.Data["HAWK.NEIL"] = ret
	end
	
	void Load()
		if SaveGame.HasData("HAWK.NEIL")
			NeilDoString(SaveGame.Data["HAWK.NEIL"])
		else
			HawkData = {}
		end
	end
	
	void Add(string spot,string World,string N,string M,string L)
		string node = sprintf("%s.%s.%s",M,L,spot)
		HawkData[World] = HawkData[World] or {}
		HawkData[World][node] = new HData(N,M,L,spot)
	end
			

end