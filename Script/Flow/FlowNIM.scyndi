// License:
// 	  src/Script/Script/Flow/FlowNIM.scyndi
// 
// 	  Version: 25.02.23 I
// 	
// 	  Copyright (C) 2021, 2025 Jeroen Petrus Broks
// 	
// 	  ===========================
// 	  This file is part of a project related to the Phantasar Chronicles or another
// 	  series or saga which is property of Jeroen P. Broks.
// 	  This means that it may contain references to a story-line plus characters
// 	  which are property of Jeroen Broks. These references may only be distributed
// 	  along with an unmodified version of the game.
// 
// 	  As soon as you remove or replace ALL references to the storyline or character
// 	  references, or any termology specifically set up for the Phantasar universe,
// 	  or any other univers a story of Jeroen P. Broks is set up for,
// 	  the restrictions of this file are removed and will automatically become
// 	  zLib licensed (see below).
// 
// 	  Please note that doing so counts as a modification and must be marked as such
// 	  in accordance to the zLib license.
// 	  ===========================
// 
// 
// 	  zLib license terms:
// 	
// 	  This software is provided 'as-is', without any express or implied
// 	  warranty.  In no event will the authors be held liable for any damages
// 	  arising from the use of this software.
// 
// 	  Permission is granted to anyone to use this software for any purpose,
// 	  including commercial applications, and to alter it and redistribute it
// 	  freely, subject to the following restrictions:
// 	
// 	  1. The origin of this software must not be misrepresented; you must not
// 	     claim that you wrote the original software. If you use this software
// 	     in a product, an acknowledgment in the product documentation would be
// 	     appreciated but is not required.
// 	  2. Altered source versions must be plainly marked as such, and must not be
// 	     misrepresented as being the original software.
// 	  3. This notice may not be removed or altered from any source distribution.
// End License


Script

#use "Libs/Music"
#use "Libs/LinkedList"

#use "Libs/SCI/Sys"
#use "Libs/SCI/JCR6"
#use "Libs/SCI/Audio"
#use "Libs/SCI/Events"
#use "Libs/SCI/Graphics"
#use "Libs/SCI/Intervar"

#use "Script/Use/Link"
#use "Script/Use/Anyway"

#use "Script/Use/Convert/Flow"
#use "Script/use/Convert/RPG2Stat"


#macro __NG Lua.Scyndi.Class.NIMGame

Global Var Scheldwoorden

#region General
var Mouse = ObtainImage("MOUSE")
Var Font = ObtainFont("BOXTEXT")
Var BFnt = ObtainFont("BIGTEXT")
Var Buzz = Audio.Obtain("BUZZ")
Var UFO  = LoadNewImage("GFX/Special/UFO.png","NIM_UFO")
Var Proj = LoadNewImage("GFX/Special/Projectile.png","NIM_PROJECTILE")
Var Shot = Audio.LoadNew("Audio/SFX/photon.ogg","SPELLANI_SHOOT_SOUND")
#endregion

Init
	UFO.HotCenter()
	Proj.HotCenter()
End

#region Artificial Intelligence
Class AI_Move

	ReadOnly Int Row
	ReadOnly Int Shoot
	
	Static ReadOnly Table Situations = {}
	
	Constructor(Int R,Int S)
		Row   = R
		Shoot = S
	End
	
End

Init
		AI_Move.Situations["111"] = new AI_Move(0,0) // No win
        AI_Move.Situations["112"] = new AI_Move(3,2)
        AI_Move.Situations["113"] = new AI_Move(3,3)
        AI_Move.Situations["121"] = new AI_Move(2,2)
        AI_Move.Situations["122"] = new AI_Move(1,1)
        AI_Move.Situations["123"] = new AI_Move(0,0) // No win 123
        AI_Move.Situations["131"] = new AI_Move(2,3)
        AI_Move.Situations["132"] = new AI_Move(0,0) // NoWin 123
        AI_Move.Situations["133"] = new AI_Move(1,1)
        AI_Move.Situations["141"] = new AI_Move(2,4)
        AI_Move.Situations["142"] = new AI_Move(2,1)
        AI_Move.Situations["143"] = new AI_Move(2,2)
        AI_Move.Situations["211"] = new AI_Move(1,2)
        AI_Move.Situations["212"] = new AI_Move(2,1)
        AI_Move.Situations["213"] = new AI_Move(0,0) // No win 123
        AI_Move.Situations["221"] = new AI_Move(3,1)
        AI_Move.Situations["222"] = new AI_Move(2,2)
        AI_Move.Situations["223"] = new AI_Move(3,3)
        AI_Move.Situations["231"] = new AI_Move(0,0) // No win 123
        AI_Move.Situations["232"] = new AI_Move(2,3)
        AI_Move.Situations["233"] = new AI_Move(1,2)
        AI_Move.Situations["241"] = new AI_Move(2,1)
        AI_Move.Situations["242"] = new AI_Move(2,4)
        AI_Move.Situations["243"] = new AI_Move(2,3)
        AI_Move.Situations["311"] = new AI_Move(1,3)
        AI_Move.Situations["312"] = new AI_Move(0,0) // No win 123
        AI_Move.Situations["313"] = new AI_Move(2,1)
        AI_Move.Situations["321"] = new AI_Move(0,0) // No win 123
        AI_Move.Situations["322"] = new AI_Move(1,3)
        AI_Move.Situations["323"] = new AI_Move(2,2)
        AI_Move.Situations["331"] = new AI_Move(3,1)
        AI_Move.Situations["332"] = new AI_Move(3,2)
        AI_Move.Situations["333"] = new AI_Move(3,3)
        AI_Move.Situations["341"] = new AI_Move(2,2)
        AI_Move.Situations["342"] = new AI_Move(2,3)
        AI_Move.Situations["343"] = new AI_Move(2,4)
        AI_Move.Situations["411"] = new AI_Move(1,4)
        AI_Move.Situations["412"] = new AI_Move(1,1)
        AI_Move.Situations["413"] = new AI_Move(1,2)
        AI_Move.Situations["421"] = new AI_Move(1,1)
        AI_Move.Situations["422"] = new AI_Move(1,4)
        AI_Move.Situations["423"] = new AI_Move(1,3)
        AI_Move.Situations["431"] = new AI_Move(1,2)
        AI_Move.Situations["432"] = new AI_Move(1,3)
        AI_Move.Situations["433"] = new AI_Move(1,4)
        AI_Move.Situations["441"] = new AI_Move(3,1)
        AI_Move.Situations["442"] = new AI_Move(3,2)
        AI_Move.Situations["443"] = new AI_Move(3,3)
        AI_Move.Situations["511"] = new AI_Move(1,5)
        AI_Move.Situations["512"] = new AI_Move(1,2)
        AI_Move.Situations["513"] = new AI_Move(1,3)
        AI_Move.Situations["521"] = new AI_Move(1,3)
        AI_Move.Situations["522"] = new AI_Move(1,5)
        AI_Move.Situations["523"] = new AI_Move(1,4)
        AI_Move.Situations["531"] = new AI_Move(1,3)
        AI_Move.Situations["532"] = new AI_Move(1,4)
        AI_Move.Situations["533"] = new AI_Move(1,5)
        AI_Move.Situations["541"] = new AI_Move(0,0) // No win!
        AI_Move.Situations["542"] = new AI_Move(1,2)
        AI_Move.Situations["543"] = new AI_Move(3,2)
        
        // Situation zero
        AI_Move.Situations["000"] = new AI_Move(0,0) // komt niet voor!
        AI_Move.Situations["001"] = new AI_Move(3,1)
        AI_Move.Situations["002"] = new AI_Move(3,2)
        AI_Move.Situations["003"] = new AI_Move(3,3)
        AI_Move.Situations["010"] = new AI_Move(2,1)
        AI_Move.Situations["011"] = new AI_Move(0,0) // No win!
        AI_Move.Situations["012"] = new AI_Move(3,1)
        AI_Move.Situations["013"] = new AI_Move(3,2)
        AI_Move.Situations["020"] = new AI_Move(2,2)
        AI_Move.Situations["021"] = new AI_Move(2,1)
        AI_Move.Situations["022"] = new AI_Move(0,0) // No win!
        AI_Move.Situations["023"] = new AI_Move(2,1)
        AI_Move.Situations["030"] = new AI_Move(2,3)
        AI_Move.Situations["031"] = new AI_Move(2,2)
        AI_Move.Situations["032"] = new AI_Move(2,1)
        AI_Move.Situations["033"] = new AI_Move(0,0) // No win!
        AI_Move.Situations["040"] = new AI_Move(2,4)
        AI_Move.Situations["041"] = new AI_Move(2,3)
        AI_Move.Situations["042"] = new AI_Move(2,2)
        AI_Move.Situations["043"] = new AI_Move(2,1)
        AI_Move.Situations["100"] = new AI_Move(1,1)
        AI_Move.Situations["101"] = new AI_Move(0,0) // No win!
        AI_Move.Situations["102"] = new AI_Move(3,1)
        AI_Move.Situations["103"] = new AI_Move(3,2)
        AI_Move.Situations["110"] = new AI_Move(0,0) // No win!
        AI_Move.Situations["120"] = new AI_Move(2,1)
        AI_Move.Situations["130"] = new AI_Move(2,2)
        AI_Move.Situations["140"] = new AI_Move(2,3)
        AI_Move.Situations["200"] = new AI_Move(1,2)
        AI_Move.Situations["201"] = new AI_Move(1,1)
        AI_Move.Situations["202"] = new AI_Move(0,0) // No win!
        AI_Move.Situations["203"] = new AI_Move(3,1)
        AI_Move.Situations["210"] = new AI_Move(1,1)
        AI_Move.Situations["220"] = new AI_Move(0,0) // no win!
        AI_Move.Situations["230"] = new AI_Move(2,1)
        AI_Move.Situations["240"] = new AI_Move(2,2)
        AI_Move.Situations["300"] = new AI_Move(1,3)
        AI_Move.Situations["301"] = new AI_Move(1,2)
        AI_Move.Situations["302"] = new AI_Move(3,1)
        AI_Move.Situations["303"] = new AI_Move(0,0) // no win!
        AI_Move.Situations["310"] = new AI_Move(1,2)
        AI_Move.Situations["320"] = new AI_Move(1,1)
        AI_Move.Situations["330"] = new AI_Move(0,0) // No Win!
        AI_Move.Situations["340"] = new AI_Move(2,1)
        AI_Move.Situations["400"] = new AI_Move(1,4)
        AI_Move.Situations["401"] = new AI_Move(1,3)
        AI_Move.Situations["402"] = new AI_Move(1,2)
        AI_Move.Situations["403"] = new AI_Move(1,1)
        AI_Move.Situations["410"] = new AI_Move(1,3)
        AI_Move.Situations["420"] = new AI_Move(1,2)
        AI_Move.Situations["430"] = new AI_Move(1,1)
        AI_Move.Situations["440"] = new AI_Move(0,0) // No win!
        AI_Move.Situations["500"] = new AI_Move(1,4)
        AI_Move.Situations["501"] = new AI_Move(1,3)
        AI_Move.Situations["502"] = new AI_Move(1,2)
        AI_Move.Situations["503"] = new AI_Move(1,4)
        AI_Move.Situations["510"] = new AI_Move(1,4)
        AI_Move.Situations["520"] = new AI_Move(1,3)
        AI_Move.Situations["530"] = new AI_Move(1,2)
        AI_Move.Situations["540"] = new AI_Move(1,1)
End
#endregion

#Region Man

Class Nim_Man
	ReadOnly Int X
	ReadOnly Int Y
	ReadOnly Var Img
	Static ReadOnly Table Sex = {[1]="Guy",[2]="Girl"}
	Constructor(int cx, int cy)
		string sp = Sex[math.random(1,2)]
		X = cx
		Y = cy
		Img = LoadNewImage("GFX/Actors/SinglePic/Random/Alien"..sp..".png","NIM_"..Upper(sp))
		Img.HotBottomCenter()
		CSayF("Spawned a %s on (%04d,%04d)",sp,x,y)
	End
End	

Class Nim_Row
	
	ReadOnly Int ResetNum
	ReadOnly Int Y
	
	static int HoverRow = 0
	static int HoverShoot = 0
	
	static Get Int W
		return Graphics.W div 7
	End
	
	static Get Int H
		return (Graphics.H - 100) div 4
	End
	
	Var Men
	
	Get Int Num
		Int R = 0
		For i=1,ResetNum
			If Men[i]
				R++
			End
		End
		Return R
	End
	
	Void Reset()
		Men = {}
		For i=1,ResetNum
			Men[i] = new Nim_Man(i*W,Y)
		End
	End
	
	Constructor(int TY,int sNum)
		ResetNum = sNum
		Y        = TY
	End
	
	Static Table Row = {}
	
	Static Void ResetAll()
		For _,R in pairs(Row)
			R.Reset()
		End
	End
	
	Void Draw()
		For i=1,ResetNum
			If Men[i]
				Men[i].Img.Draw(Men[i].X,Y)
				If __NG.MX>Men[i].X-(16*__NG.Scl) && __NG.MX<Men[i].X+(16*__NG.ScL)
					HoverShoot=i
				End
			End
		End
	End
	
	Static Void DrawAll()
		HoverRow=0
		HoverShoot=0
		For i,R in pairs(Row)
			__SkyBlue
			BFnt.Text(""..i..":",3,R.Y-5,0,1)
			__White
			R.Draw()
			if __NG.MY>R.Y-(64*__NG.ScL) && __NG.MY<R.Y
				HoverRow=i
			end
		End
	End
	
	//Static Var __NumberIndex(int idx)
	Static Var StaticNumIndex(int idx)
		Return Row[idx]
	End
	
End
	
Init
	//int H  = Graphics.H
	//int RH = H div 5
	Nim_Row.Row[1] = New Nim_Row(math.floor(Nim_Row.H * 1.5),5)
	Nim_Row.Row[2] = New Nim_Row(math.floor(Nim_Row.H * 2.5),4)
	Nim_Row.Row[3] = New Nim_Row(math.floor(Nim_Row.H * 3.5),3)
End


Class Nim_Projectile
	Static Get Var Img
		return Proj
	End
	Readonly Int X
	ReadOnly Int StartY
	ReadOnly Int ToY
	ReadOnly Int KillRij
	ReadOnly Int KillMan
	Int Y
	
	Constructor(int sy,int r,int s)
		StartY  = SY
		KillRij = r
		KillMan = s
		ToY = NIM_Row[r].Y - 40
		X   = NIM_Row[r].Men[s].X
		Y   = StartY
		Self.List.AddLast(Self)
		Shot.Play()
	End
	
	Static Var List = New TLinkedList()
	Static Get Int Num
		Return List.Count
	End
	Static Get Bool Any
		return Num>0
	End
	Static Get Bool None
		Return !Any
	End
	
	Static Void Cycle()
		// CSayF("Cycle. Num: %d",Num)
		For P,L in List.Each
			// CSayF("Projectile: %d -> (%d,%d) -> %d",P.StartY,P.X,P.Y,P.ToY)
			P.Y += 3
			Img.Draw(P.X,P.Y)
			If P.Y>=P.ToY
				NIM_Row[P.KillRij].Men[P.KillMan] = nil
				L.UnLink()
			End
		End
	End
	
End	

Class NIM_Schelden
	ReadOnly String TXT
	ReadOnly Int R
	ReadOnly Int G
	ReadOnly Int B
	ReadOnly Int Y
	
	Constructor(int aY,String aTXT,int aR=255,int aG=180,int aB=0)
		TXT = aTXT
		Y   = aY
		R   = aR
		G   = aG
		B   = aB
	End
End		
#endregion

Group NIMGame
	Get Int mx
		Return Events.MouseX
	End
	
	Get Int my 
		Return Events.MouseY
	End
	
	get bool ml
		return Events.MouseHitLeft
	end
	
	get var Row
		return NIM_Row
	end

	String Turn
	String Stage
	String ReturnTo
	Number ScL
	
	Int WelkeRij
	Int HoeveelMoetenErWeg
	
#region Start
	Void NewGame()
		Turn = "PLAYER"
		Stage = "WhichRow"
		Nim_Row.ResetAll()
	End
	
	Void GoToGame(string retto)
		ReturnTo=RetTo
		ScL = Graphics.W / (7*64)
		CSayF("Scale = %1.5f",Scl)
		NIMGame.NewGame()
		Music.Push()
		Music.Play("Music/BlockShooter/Overworld.ogg")
	End
#endregion
	
#region Stages
	Void Stage_WhichRow()
		//for k,_ in spairs(Lua.Events)
		//	print(k)
		//end
		string TXT
		int HC = Events.GetChar()-48
		Switch gstring.Lang
			Case "Dutch"
				TXT = "Welke rij? "
			Default
				TXT = "Which row? "
		End
		if HC>=1 && HC<=3
			TXT += HC
			WelkeRij = HC
			CSayF("Player chose row %d by keyboard",HC)
			Stage = "RemoveHowMany"
		elseif NIM_Row.HoverRow>0
			TXT += NIM_Row.HoverRow
			if ML
				CSayF("Player chose row %d by mouse",NIM_Row.HoverRow) 
				WelkeRij = NIM_Row.HoverRow
				Stage = "RemoveHowMany"
			end
		end
		
		__Ember
		Font.Text(TXT,Graphics.W div 2, Graphics.H - 150, 2, 2)
		Events.Flush()
	End
	
	Void Stage_RemoveHowMany()
		Static Int NVED1
		string TXT 
		int HC = Events.GetChar()-48
		TXT = "Row "..WelkeRij..": "
		Switch NIM_Row[WelkeRij].Num
			Case 0
				Buzz.Play()
				Stage = "WhichRow"
			Case 1
				Switch(gstring.Lang)
					Case "Dutch"
						TXT += "Nu verdwijnt er dus 1"
					Default
						TXT += "So now 1 will be removed"
				End
				NVED1 = (NVED1+1) % 150
				If NVED1==0
					Stage="Shoot"
				End
				HoeveelMoetenErWeg=1
			Default
				If Events.KeyHit(27)
					Buzz.Play()
					Stage = "WhichRow"
					//NIM_Row[WelkeRij].Num=0
					return
				End
				Switch gstring.Lang
					Case "Dutch"
						TXT += "Hoeveel moeten er weg? "
					Default
						TXT += "How many should be removed? "
				End
				if HC>0 && HC<=NIM_Row[WelkeRij].Num
					HoeveelMoetenErWeg = HC
					Stage="Shoot"
				elseIf NIM_Row.HoverRow==Welkerij && NIM_Row.HoverShoot>0
					TXT += NIM_Row.HoverShoot
					If ML
						HoeveelMoetenErWeg = NIM_ROW.HoverShoot
						Stage="Shoot"
					End
				End
		End
		__Ember
		Font.Text(TXT,Graphics.W div 2, Graphics.H - 150, 2, 2)
		Events.Flush()
	End
	
	Void Stage_Shoot()
		Static int SPD = math.max(1,Graphics.W div 256)
		Static int X = -250
		Static int Y = 80
		For i=1,SPD
			X++
			If HoeveelMoetenErWeg>0				
				For idx,m in pairs(Row[WelkeRij].Men)
					//CSayF("Projectile: %04d; Men[%d]: %04d",X,idx,m.X) // DEBUG ONLY!
					If m.X==X
						HoeveelMoetenErWeg--
						CSayF("Projectile: %s",tostring(new NIM_Projectile(Y,WelkeRij,idx)))
					End
				End
			End			
		End
		__white
		NIM_Projectile.Cycle()
		Switch Turn
			Case "PLAYER"
				__GREEN
			Case "COMPUTER"
				__RED
			Default
				Lua.error("? Turn error")
		End
		UFO.Draw(X,Y)
		if X>Graphics.W+250 && Nim_Projectile.None
			CSayF("End of %s turn!",Turn)
			X=-300
			bool EndGame=True
			For _,R in pairs(Row.Row)
				EndGame=EndGame && R.Num==0
			End
			If EndGame
				Stage="Victory_"..Turn
				Return
			End
			switch Turn
				Case "PLAYER"
					Turn = "COMPUTER"
					Stage = "ComputerAI"
					Return
				Case "COMPUTER"
					Turn = "PLAYER"
					Stage = "WhichRow"
					Return
				Default
					Lua.error("? Turn error")
			End
		End
	End
	
	Void Stage_ComputerAI()
		static int time	
		static int ttck
		static bool shw
		string TXT = ""
		time++
		ttck = (ttck + 1) % 12
		if ttck==0
			shw = !shw
		end
		if shw
			Switch(gstring.Lang)
				Case "Dutch"
					TXT += "Bezig met nadenken"
				Default
					TXT += "Thinking"
			End
		End		
		__Ember
		Font.Text(TXT,Graphics.W div 2, Graphics.H - 150, 2, 2)
		
		If time>250
			CSay("AI outcome")
			String AITag
			Var Act
			For i=1,3
				AITag += Row[i].Num
			End
			Act = AI_Move.Situations[AITag]
			If (!Act) || Act.Row==0 || Act.Shoot==0
				CSay("= Computer can't win anymore, unless player isn't paying attention")
				WelkeRij=math.random(1,3)
				HoeveelMoetenErWeg=math.random(1,math.max(1,NIM_Row[WelkeRij].Num))
			Else
				CSayF("= Situation '%s' found",AITag)
				WelkeRij=Act.Row
				HoeveelMoetenErWeg=Act.Shoot
			End
			CSayF("= AI decided: Row %d, remove %d",WelkeRij,HoeveelMoetenErWeg)
			If WelkeRij>0 && NIM_Row[WelkeRij].Num>=HoeveelMoetenErWeg
				Stage="Shoot"
				CSay("= Move Approved!")
				time=0
			Else
				CSay("= Move Rejected!")
			End
		End
	End
	
	Void Stage_Victory_COMPUTER()
		Static Int Tick=0
		Static Var I_WON
		Tick = (Tick+1)%250
		if !I_WON
			if JCR6.EntryExists("GFX/Special/WIN_"..gstring.Lang..".png")
				I_WON = LoadImage("GFX/Special/WIN_"..gstring.Lang..".png","NIM_I_WIN")
			else
				I_WON = LoadImage("GFX/Special/WIN_ENGLISH.png","NIM_I_WIN")
			end
		end
		__White
		I_WON.Stretch(0,0,Graphics.W,Graphics.H-100)
		if Tick==0
			Self.EndGame(false)
		end
	End
			
	
	static Table ScheldTabel
	Static Table Lines
	Static Int Tick
	Void Stage_Victory_PLAYER()
		//Static Var Scheldwoorden
		LocExtern ScheldDir "'Script/Data/NIM_Schelden/'"
		String ScheldFile := ScheldDir .. gstring.Lang
		
		// Load foul words
		If !JCR6.EntryExists(ScheldFile..".lbc")
			ScheldFile = ScheldDir.."English"
		End
		//ScheldWoorden = Scheldwoorden || NeilUse(ScheldFile)
		if (!Scheldwoorden)
			Lua.Scyndi.Use(ScheldFile)
		End	
		// Init on tick 0
		If Tick==0
			ScheldTabel = {}
			Bool FoundSame = False
			int TimeOut=10000
			Repeat
				ScheldTabel = {}
				FoundSame = False
				For i=1,5
					ScheldTabel += ScheldWoorden[math.random(0,Len(ScheldWoorden))]
					For j=0,Len(ScheldTabel)-1
						FoundSame = FoundSame || (j!=i && ScheldTabel[i]==ScheldTabel[j])
						CSayF("%05d:> Check %d(%s).%d(%s)",TimeOut,i,ScheldTabel[i],j,ScheldTabel[j]) 
					End
				End
				TimeOut--
				Lua.assert(TimeOut>=0,"Foul language TimeOut!")
			LoopWhile FoundSame
			Lines = {}
			Switch gString.Lang
				Case "Dutch"
					Lines += new NIM_Schelden(50,"DOOR DE EEN OF ANDERE "..ScheldTabel[0])
				Default
					Lines += new NIM_Schelden(50,"DUE TO SOME "..ScheldTabel[0])
			End
			for i=1,Len(ScheldTabel)-1
				Lines += new NIM_Schelden((i+1)*50,ScheldTabel[i])
			end
			Int YWZ = (len(ScheldTabel)+2)*50
			Switch gString.Lang
				Case "Dutch"
					Lines += new NIM_Schelden(YWZ,"WANHOOPSZET",255,0,0)
					Lines += new NIM_Schelden(YWZ+100,"HEB JIJ GEWONNEN!",0,180,255)
				Default
					Lines += new NIM_Schelden(YWZ,"STROKE OF FATE",255,0,0)
					Lines += new NIM_Schelden(YWZ+100,"YOU WON!",0,180,255)
			End
		ElseIf Tick>Len(Lines)*80
			Self.EndGame(true)
		Else
			For i=0, Tick Div 75
				If i>=0 && i<Len(Lines)
					Var L=Lines[i]
					Graphics.Color(L.R,L.G,L.B)
					Font.Text(L.TXT,Graphics.W div 2,L.Y,2,2)
				End
			End		
		End
		Tick++
	End
#endregion
	
	
	Void EndGame(bool Win)
		Music.Pop()
		Switch ReturnTo
			Case "DEBUG"
				Flow.GoToFlow("CONSOLE")
			Case "KOTA"
				If Win
					Map.Schedule("KOTA_WIN")
				Else
					Map.Schedule("KOTA_LOSE")
				End
				Flow.GoToFlow("FIELD")
			Case "HAWK" "TERMINAL"
				State.GoToFlow("TERMINAL")
			Default
				Lua.error("Unknown NIM-End return setting: "..ReturnTo)
		End
	End
	
	Void Flow()
		// Game
		Graphics.Scale(ScL,ScL)
		Nim_Row.DrawAll()
		Graphics.Scale(1,1)
		Switch(Turn)
			case "PLAYER"
				__Green
				BFnt.Text("Your turn",Graphics.W div 2, 20, 2, 2)
			case "COMPUTER"
				__Red
				BFnt.Text("My turn",Graphics.W div 2, 20, 2, 2)
			default
				lua.error("Turn error: "..turn)
		End
		Self["Stage_"..Stage]()
		// Debug
		//Dev.ToConsole()
		// Party
		If RPGParty.Max>0
			Party.Boxes()
		End
		// Mouse
		Mouse.Draw(mx,my)
		QuitRequest()
	End
End

//Global ReadOnly Delegate Apollo_Flow = NIMGame.Flow
Global Delegate MainFlow
Init
	MainFlow=NimGame.Flow
End
