// License Information:
// src/Tricky Script/Script/Flow/FlowField.NeilBundle/FieldBeam.neil
// Version: 20.09.26
// Copyright (C) 2020 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
class ClBeam

	static var Sound = Audio.Obtain("BEAM")
	static delegate DS
	static var MP
	static get string LY
		return Map.Layer
	end
	
	static readonly var Lijst = new TLinkedList("var")
	
	int Frame = -1
	readonly int Route = 1
	readonly bool despawn
	readonly string Actor
	readonly bool NIMT0
	readonly string Texture
	get var Act
		return MP.CurLayer.Obj(Actor)
		//Layer(LY).Obj(Actor)
	end
	
	void Update()
		Act.AnimFrame = Frame
	end
	
	static void Add(string ActTag,bool DespawnAfter,bool Ascending)
		Lijst.AddLast(new ClBeam(ActTag,DespawnAfter,Ascending))
	end
	
	CONSTRUCTOR(string Tag,bool Des,bool asc)
		Actor = Tag
		Despawn = Des
		NIMT0 = Act.NotMovingThen0
		Texture = Act.Texture
		Act.Texture = "GFX/Actors/Teleport/Teleport.jpbf"
		Act.NotMovingThen0 = false
		CSayF("Beaming '%s' - Despawn: %s - Ascending: %s",Tag,lua.tostring(des),lua.tostring(asc))
		if !asc
			Frame=100
			Route=-1
		end
	end
	
	static void Run()
		FPS.WaitMinTicks()
		Sound.Play()
		while Lijst.Count>0
			for ob,lnk in Lijst.Each
				ob.Frame += ob.Route
				if ob.Frame>100 || ob.Frame<0
					ob.Act.NotMovingThen0 = ob.NIMT0
					// ob.Act.Texture = ob.Texture
					lnk.Unlink()
					if ob.Despawn
						MP.CurLayer.Kill(ob.Actor)
						MP.Remap()
					end
				else
					ob.Update()
				end
			end
			FPS.WaitMinTicks()
			DS()
			Graphics.Flip()
		end
	end
end