// License Information:
// src/Tricky Script/Script/Flow/FieldMenu/Abilities.neil
// Version: 21.02.10
// Copyright (C) 2020, 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

group Crystal_ARMS
	void Flow(uBox,string CharTag,string situation)
	end
end

table ablmods


table ABL_PowerUpColors

init 
	DefTable ABL_PowerUpColors 
		INSTANT  = {255,255,  0}
		CANCEL   = {255,180,  0}
		DBLSPEED = {  0,180,255}
		DBLPOWER = {255,  0,  0}
		APCUT    = {180,255,  0} 
	end
end


                    

module
	
	readonly var sfont = ImageFont.Obtain("SYSFONT")
	readonly var afont = ImageFont.Obtain("BOXTEXT")
	readonly table mods
	readonly table PUI
	
	void Flow(uBox,string CharTag,string situation)
		if CharTag=="UniCrystal" || CharTag=="Briggs"
			return
		end
		if CharTag=="Crystal"
			Crystal_ARMS.Flow(ubox,CharTag,situation)
			return
		end
		int y = ubox.y + 20
		int x = ubox.x + 40
		//for list abl
		//end
		for atag in RPGChar[CharTag].List.ABL.Each
			string CT = CharTag
			string ActivatePWUP = ""
			bool Hover = Events.MouseX()>ubox.x && Events.MouseX()<ubox.x+ubox.h && Events.MouseY()>y && Events.MouseY()<y+35
			if CT=="UniWendicka"
				CT="Wendicka"
			end
			var abl = Item["ABL_"..atag]
			__skyblue
			if Hover
				Graphics.Color(0,255,255)
			end
			afont.Text(abl.Name,x,y)
			int APCost = abl.ABL_AP
			__ember
			if RPGChar[CharTag].List.ABL_POWERUP.Has(atag..".APCUT") 
				APCost = math.ceil(APCost/2) 
			end
			if APCost > RPGChar[CharTag].Points["AP"].Have 
				__red
			end
			afont.Text(lua.tostring(APCost),ubox.x+ubox.w-10,y,1)
			Graphics.Scale(0.75,0.75)
			static table haspu = {}
			haspu[CharTag] = haspu[CharTag] or {}			
			int pux = (ubox.w div 2)+ubox.x
			int groundvalue = gv.gInt["ABL.USED."..CT:upper().."."..atag:upper() ] + RPGChar[CT].Stat.Level
			for pu,puc in spairs(ABL_PowerUpColors)
				if abl["ABL_"..pu]>0
					Graphics.Color(puc[1],puc[2],puc[3])
					PUI.Socket = PUI.Socket || Image.Load("GFX/STATUSBAR/ABILITYPOWERUP/Socket.png")
					PUI[pu] = PUI[pu] || Image.Load("GFX/STATUSBAR/ABILITYPOWERUP/"..pu..".png")
					PUI.Socket.Draw(pux,y)
					if RPGChar[CharTag].List.ABL_POWERUP.Has(atag.."."..pu)
						PUI[pu].Draw(pux,y)
						haspu[CharTag][pu]=true
					elseif math.random(0,abl["ABL_"..pu])<groundvalue && ActivatePWUP==""
						ActivatePWUP = pu
					end
				end
				pux += 25
			end
			Graphics.Scale(1,1)
			if Hover && Events.MouseHitLeft() && Prefixed(situation,"COMBAT_")
				int APCost = abl.ABL_AP
				if RPGChar[CharTag].List.ABL_POWERUP.Has(atag..".APCut")
					APCost = APCost Div 2
				end
				State.Call("FLOW_COMBAT","Stage_PlayerInput.ReturnAbility",sprintf("\"%s\",%d,\"%s\"",atag,APCost,ActivatePWUP))
			end
			y += 35
		end
		__white
		sfont.Text(mods[CharTag].ShowNeed(CharTag),x,y)
	end
	
	CONSTRUCTOR
		table modsmeta
		modsmeta.__index = table(s,string k)
			k = k:upper()
			if k=="UNIWENDICKA"
				k = "WENDICKA"
			end
			ablmods[k] = ablmods[k] or NeilUse("Script/Data/Char/Abilities/"..k)
			return ablmods[k]
		end
		setmetatable(mods,modsmeta)
	end
	
end