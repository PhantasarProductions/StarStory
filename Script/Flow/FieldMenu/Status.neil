// License Information:
// src/Tricky Script/Script/Flow/FieldMenu/Status.neil
// Version: 21.07.06
// Copyright (C) 2020, 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

#use "Script/Use/Misc/Resistance"

module

	readonly table Portretten
	readonly var big = ImageFont.Obtain("BIGTEXT")
	readonly var fnt = ImageFont.Obtain("BOXTEXT")
	readonly table Stats = {  "Strength", "Defense", "Will", "Resistance", "Accuracy", "Evasion", "Agility" }
	
	readonly table StatusChanges = { "Block",  "Damned", "Death", "Disease", "Paralysis", "Poison", "Will" }
	readonly table Elements      = { "Dark", "Earth", "Fire", "Frost", "Light", "Lightning", "Water", "Wind" }
	readonly table EleIco
	readonly table StatIco
	
	var GetPortret(string Tag)
		if not Portretten[Tag]
			string File
			switch Tag
				case "UniWendicka"
					File = "GFX/PORTRET/Wendicka/Uniform.png"
				case "UniCrystal"
					File = "GFX/PORTRET/Crystal/Uniform.png"
				default
					File = "GFX/PORTRET/"..Tag.."/General.png"
			end
			Portretten[Tag] = Image.LoadNew(File,"PORTRET_"..Tag)
			Portretten[Tag].Hot(5,Portretten[Tag].Height)
		end
		return Portretten[Tag]
	end


	void Flow(uBox,string CharTag)
		int x = ubox.x
		int y = ubox.y
		int bw = ubox.w
		var Char = RPGChar[CharTag]
		// Portret
		__white
		GetPortret(CharTag).Draw(x+10,y+150)
		// Name
		__red
		big.Text(Char.Name,x+150,y+25)
		// Bars
		int g = math.floor((RPGChar[CharTag].Points.HP.Have/RPGChar[CharTag].Points.HP.Maximum)*255)
		// print(255-g,g,0," HP ",RPGChar[CharTag].Points.HP.Have,RPGChar[CharTag].Points.HP.Maximum)
		Graphics.Color((255-g),g,0)
		StatBar(x+150,y+100,(bw)-160,3,RPGChar[CharTag].Points.HP.Have,RPGChar[CharTag].Points.HP.Maximum)
		Fnt.Text("HP",x+150,y+80)
		string HPS = sprintf("%d of %5d",RPGChar[CharTag].Points.HP.Have,RPGChar[CharTag].Points.HP.Maximum)
		//CSayF("%s (%d,%d)",HPS,(x+bw)-10,y+80)
		Fnt.Text(HPS,(x+bw)-10,y+80,1,0)
		if RPGChar[CharTag].Points.AP.Maximum>0
			g = math.floor((RPGChar[CharTag].Points.AP.Have/RPGChar[CharTag].Points.AP.Maximum)*100)
			graphics.Color(0,g+80,g+155)
			StatBar(x+150,y+130,(bw)-160,3,RPGChar[CharTag].Points.AP.Have,RPGChar[CharTag].Points.AP.Maximum)
			Fnt.Text("AP",x+150,y+110)
			Fnt.Text(sprintf("%d of %5d",RPGChar[CharTag].Points.AP.Have,RPGChar[CharTag].Points.AP.Maximum),(x+bw)-10,y+110,1,0)
		end
		__white
		if CharTag!="Briggs" &&  RPGChar[CharTag].Stat.Level<Caps.LevelCap
			StatBar(x+150,y+160,(bw)-160,3,RPGChar[CharTag].Points.EXP.Have,RPGChar[CharTag].Points.EXP.Maximum)
		end
		Fnt.Text("Lv",x+150,y+140)
		Fnt.Text(RPGChar[CharTag].Stat.Level,(x+bw)-10,y+140,1,0)
		for i,s in ipairs(Stats)
			int iy = (i*30)+200
			__skyblue
			Fnt.Text(s,x+25,iy)
			__ember
			if RPGChar[CharTag].Stat["BUFF_"..s]>0
				__green
			elseif RPGChar[CharTag].Stat["BUFF_"..s]<0
				__red
			end
			Fnt.Text(RPGChar[CharTag].Stat["END_"..s],x+(bw/2),iy,1)
		end
		for i,e in ipairs(Elements)
			int iy = (i*30)+200
			int ix = (bw/2)+20
			__white
			EleIco[e] = EleIco[e] or Image.Obtain("ELEM_"..(e:upper()))
			EleIco[e].Draw(ix,iy)
			switch CharRes[CharTag][e]
				case 0
					__red
					Fnt.Text("Fatal",ix+30,iy)
				case 1
					Graphics.Color(200,100,0)
					Fnt.Text("Ultra-Weak",ix+30,iy)
				case 2
					Graphics.Color(200,110,0)
					Fnt.Text("Weak",ix+30,iy)
				case 3
					Graphics.Color(200,180,0)
					Fnt.Text("--",ix+30,iy)
				case 4
					Graphics.Color(200,180,0)
					fnt.Text("Resistant",ix+30,iy)
				case 5
					Graphics.Color(100,180,0)
					fnt.Text("Immune",ix+30,iy)
				case 6
					Graphics.Color(0,255,0)
					Fnt.Text("Absorb",ix+30,iy)
				default
					Fnt.Text("???",ix+30,iy)
			end
		end
		for i,s in ipairs(StatusChanges)
			int iy = (i*30)+200
			int ix = (bw/4)*3
			__white
			StatIco[s] = StatIco[s] or Image.Obtain("STATUS_"..(s:upper()))
			StatIco[s].Draw(ix,iy)
			__SkyBlue
			Fnt.Text(sprintf("%d%%",CharRes[CharTag][s]),ix+100,iy,1)
		end
	end

end