// License Information:
// src/Tricky Script/Script/Flow/FlowTerminal.neil
// Version: 21.05.02
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

#use "Script/Use/Anyway"
#use "Script/Use/Misc/Box"

#use "Script/Use/Misc/GoToNIM"

#use "Libs/LinkedList"

Class TApp
	ReadOnly String Name
	ReadOnly Var Icon
	ReadOnly String CheckInstalled
	
	Get Bool Installed
		If CheckInstalled=="ALWAYS"
			Return true
		End
		Return gv.gbool[CheckInstalled]
	end
	
	ReadOnly Delegate Program
	
	Constructor(String AName,Delegate AProgram,String ACheckInstalled="ALWAYS")
		CSayF("Creating App Object for: %s",AName)
		Name=AName
		Icon=Image.LoadNew("GFX/Terminal/"..AName..".png","TERMINAL_"..AName)
		Program = AProgram
		CheckInstalled = ACheckInstalled
		Lua.assert(Icon,"I failed to load the icon for App: "..AName)
	End
End

var Mouse = Image.Obtain("MOUSE")
var ScreenBox = new Box(0,0,Screen.W,Screen.H-128,false)
Var AppList = new LinkedList()
Var Font = ImageFont.Obtain("BOXTEXT")

Void ChainTutorial()
	Lua.error("Tutorials not yet available")
End

Void ChainGameShoot()
	Lua.error("Game Shoot not yet available")
End

Void ChainBestiary()
	Lua.error("Bestiary not yet available")
End

Void ChainJukeBox()
	Lua.error("Jukebox not yet available")
end

Void ChainGameNIM()
	GoToNIM("TERMINAL")
End

Void Quit()
	State.GoToFlow("FIELD")
end

Init
	AppList.AddLast(new TApp("Save",MSave.ToSave))
	AppList.AddLast(new TApp("Tutor",ChainTutorial))
	AppList.AddLast(new TApp("Jukebox",ChainJukebox,"FOUNDAPP_JUKEBOX"))
	AppList.AddLast(new TApp("GameShoot",ChainGameShoot,"FOUNDAPP_GAMESHOOT"))
	AppList.AddLast(new TApp("GameNIM",ChainGameNIM,"FOUNDAPP_NIM"))
	AppList.AddLast(new TApp("Bestiary",ChainBestiary,"FOUNDAPP_BESTIARY"))
	AppList.AddLast(new TApp("Quit",Quit))
End


global void Apollo_Flow()
	Dev.ToConsole()
	ScreenBox.Draw()
	// Mouse coordiniates
	int mx = Events.MouseX()
	int my = Events.MouseY()
	int ax = 100
	int ay = 100
	for App in AppList.Each
		if App.Installed
			if mx>ax && my>ay && mx<ax+50 && my<ay+80
				__Cyan
				if Events.MouseHitLeft()
					App.Program()
				end
			else
				__SkyBlue
			end
			App.Icon.Stretch(ax,ay,50,50)
			Font.Text(App.Name,ax+25,ay+52,2,0)
			ax+=120
			if ax>Screen.W-150
				ax=100
				ay+=70
			end
		end
	end
	// Party
	Party.Boxes()
	// Mouse
	Mouse.Draw(mx,my)
end