// License Information:
// **********************************************
// 
// src/Tricky Script/Script/MapScript/Ysperon - Eugorvnia.neil
// (c) Jeroen Broks, 2021, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 21.03.12
// End License Information


#region Preparations

#use "Script/Use/Anyway"

#MKL_Version "Star Story - Ysperon - Eugorvnia.neil" "21.03.12"
#MKL_Lic     "Star Story - Ysperon - Eugorvnia.neil" "Phantasar Closed License"

#macro __Facility gv.gBool.Eugorvnia_DidYouEverEnterTheFacilityFromEugorvniaBefore

int SysVal(string n)
	return Lua.tonumber(n)||0
end

#endregion

#region sudoku
plua Sudoku = {}
plua SudoRoot = {}  
init
	for i=2,9 
		SudoRoot[i*i] = i 
	end
end

#pure
local function SudoQuery(rs)
local gx,gy,r,c=0,1,1,1
return function()
       gx = gx + 1
       if gx>rs then gx=1 gy=gy+1 end
       if gy>rs then gy=1 r =r +1 end
       if r >rs then r =1 c =c +1 end
       if c >rs then return nil,nil, nil,nil end
       return gx,gy,r,c
       end
end
#endpure
import SudoQuery


void SudoReTexture(symb,work,gx,gy,r,c)
	string tag = "G"..gx..gy.."R"..r
	// CSay(tag.."/"..c)
	symb.Texture = "GFX/Textures/Sudoku/"..work.Tiles.."/"..work.PlaySolve[tag][c]..".png"
end

void SudoReTexture2(symb,work,tag,c)
	if not work.PlaySolve[tag] 
		CSay("ERROR: No data in tag "..tag)
	elseif not work.PlaySolve[tag][SysVal(c)] 
		CSay("ERROR: No data for "..tag.."/"..c) 
	end
	// CSay(serialize('PlaySolve',work.PlaySolve))
	symb.Texture = "GFX/Textures/Sudoku/"..work.Tiles.."/"..work.PlaySolve[tag][SysVal(c)]..".png"
	CSay(tag.."/"..c.." has now tex: "..symb.Texture)
end

var symbm(aid,atagc)
		plua id = aid
		plua tagc = atagc
    	void symbnidx(s,string k, v)
    		CSayF("Tag: %s => redefine sudoku symbol %s => %s",tagc,k,Lua.tostring(v))
    		Map.SetObj("SUDO_SYMB_"..id.."_"..tagc,k,v)
    	end
    	var symbget(s,string k)
    		switch k:upper()
    			case "TEXTURE" "TEXTUREFILE"
    				return Map.ObjStr("SUDO_SYMB_"..id.."_"..tagc,"Texture")
    			case "VISIBLE"
    				return Map.ObjBool("SUDO_SYMB_"..id.."_"..tagc,k)
    			default
    				return Map.ObjInt("SUDO_SYMB_"..id.."_"..tagc,k)
    		end
    	end
    	return Lua.setmetatable({},{["__index"]=symbget,["__newindex"]=symbnidx})
end    	

void InitSudoku(id)
	CSay("Let's init Sudoku!")
	plua oldlayer = Map.Layer
	if gv.gbool["SUDOKU."..id]
		CSay("Puzzle solved already, byebye!")
		return 
	end //-- No need to waste any memory or performance for stuff that is done already.
	plua work = Sudoku[id]
	if not work 
		lua.error("Data for sudoku "..id.." does not exist!") 
	end
	if not SudoRoot[work.GroupSize] 
		lua.error("Cannot initize a Sudoku on groupsize "..work.GroupSize) 
	end
	work.RootSize = SudoRoot[work.GroupSize]
	work.PlaySolve = {}
	plua ps = work.PlaySolve
	plua tag
	plua tagc
	plua butt
	plua symb
	plua tile
	plua clkscript
	plua clkarray
	if work.Layer then
		Map.Layer=work.Layer
		//Maps.GotoLayer(work.Layer) 
	else 
		//CSay("No layer set for Sudoku. If this is multi-map, you'll get in trouble")
		Lua.error("Layer error for Sudoku")
	end
	for gx,gy,r,c in SudoQuery(work.RootSize)     
    	tag = "G"..gx..gy.."R"..r
    	tagc = tag .. "C"..c
    	CSay("Initizing Sudoku field: "..tagc)
    	CSay("= Default value")
    	ps[tag] = ps[tag] or {}
    	ps[tag][c] = 0
    	// CSay("= Quick grandsol link") -- Dropped
    	// work.grandsol = work.grandsol or {}    
    	CSay("= Create symbol object")
    	work.Objects = work.Objects or {}
    	work.Objects[tagc] = work.Objects[tagc] or {}
    	//butt = Maps.Obj.Obj                   ("SUDO_BUTT_"..id.."_"..tagc)
    	//tile = Maps.Obj.Obj                   ("SUDO_TILE_"..id.."_"..tagc)
    	butt,tile = {},{}
    	butt._TAG = "NPC_SUDO_BUTT_"..id.."."..tagc
    	butt.X = Map.ObjInt(butt._TAG,"X")
    	butt.Y = Map.ObjInt(butt._TAG,"Y")
    	tile._TAG = "SUDO_TILE_"..id.."_"..tagc
    	for fld in each {"X","Y","W","H","Dominance","Alpha"}
    		tile[fld] = Map.ObjInt(tile._TAG,fld)
    	end
    	//symb = Maps.Obj.CreateObject(tile.Kind,"SUDO_SYMB_"..id.."_"..tagc)
    	symb = symbm(id,tagc)
    	Map.NewObj("TiledArea","SUDO_SYMB_"..id.."_"..tagc)
    	symb.X = tile.X
    	symb.Y = tile.Y
    	symb.W = tile.W
    	symb.H = tile.H
    	symb.Dominance = 16 //tile.Dominance + 1
    	symb.Visible = true
    	symb.Alpha=tile.Alpha
    	symb.R=255
    	symb.G=255
    	symb.B=255
    	SudoReTexture(symb,work,gx,gy,r,c)
    	work.Objects[tagc].Buttons = butt
    	work.Objects[tagc].Tiles   = tile
    	work.Objects[tagc].Symbols = symb
    	//CSay("= Create Clickable")
    	//#pure
    	//clkarray = { spot="SUDO_BUTT_"..id.."_"..tagc, arrival = "SudoButton", arrivalarg=id..';'..tag..";"..c, obj="SUDO_BUTT_"..id.."_"..tagc }
    	//#endpure
    	//clkscript = serialize("ret",clkarray).."\n\nreturn ret"
    	//CSay("   > "..clkscript)
    	//MS.Debug=0 // Something is wrong, I need to know what!
    	//-- AddClickableScript(clkscript,"*DIT*MAG*GEWOONWEG*NIET*GESPLIT*WORDEN")
    	//MS.LN_Run("FIELD","Flow/Field.Lua","AddClickableScript",clkscript,"*DIT*MAG*GEWOONWEG*NIET*GESPLIT*WORDEN") -- When everything else fails (for no reason), let's FORCE our way through! (GRRR!)
    end
    // CSay(serialize('PlaySolve',work.PlaySolve))    
    plua ctag
    plua c // -- cut tag
    
    // The "Zeg voor" routine. The lower the difficulty the more it will reveal.
    CSay("Reveal part!")
    for i=3,__skill,-1   
    	for gtag in each(work.ZegVoor[i]) 
        	ctag = split(gtag,"C")
        	tag = ctag[1] c = SysVal(ctag[2])
        	work.PlaySolve[tag][c] = work.Solved[tag][c]
        	SudoReTexture2(work.Objects[gtag].Symbols,work,tag,c)
        	work.Objects[gtag].Buttons.Visible=false
        	Map.SetObj(work.Objects[gtag].Buttons._TAG,"Visible",false)
        	Map.SetObj(work.Objects[gtag].Buttons._TAG,"X",0)
        	CSay("Revealed: "..gtag.."   value: "..(work.Solved[tag][c] or "nil").." play value: "..(work.PlaySolve[tag][c] or "nil"))
        end
    end    
    Map.Remap()
    if work.Layer 
    	//Maps.GotoLayer(oldlayer)
    	Map.Layer=oldlayer
    end
end

// This function will check if the current solution left by the player is right
void SudoNakijken(id) 
	plua work = Sudoku[id]
	// By default true, if one tile is out of line, then disapprove ;)
	plua correct = true 
	for gx,gy,r,c in SudoQuery(work.RootSize)  
    	plua tag = "G"..gx..gy.."R"..r
    	correct = correct and work.Solved[tag][c] == work.PlaySolve[tag][c]
    end
    if not correct  
    	return 
    end    
    Audio.LoadNew("Audio/SFX/MBOX1.ogg","MBOX1").Play()
    //MapEXP()
    Party.GiveEXP(1200)
    CSay("Sudoku solved")
    // SFX("Audio/SFX/MBOX1.ogg")
    plua tag
    plua tagc
    for gx,gy,r,c in SudoQuery(work.RootSize) 
    	tag = "G"..gx..gy.."R"..r
    	tagc = tag .. "C"..c
    	// Maps.Obj.Seal("SUDO_SYMB_"..id.."_"..tagc)
    	//CSay("= Sealed: "..tagc)
    	Map.Kill("NPC_SUDO_BUTT_"..id.."."..tagc,true)
    end
    for remove in each(work.SolveRemove) 
    	//Maps.Obj.Kill(remove,1)
    	Map.Kill(remove,true)
    	CSay("= Removed: "..remove)
    end    
    CSay("All done")    
    gv.gbool["SUDOKU."..id]=true
end

void SudoButton(id,tag,pc)
	//local player = Actors.Actor('PLAYER')
	//player.Walking=0
	//player.Moving=0
	//Player.StopWalking()
	//Actors.MoveTo('PLAYER',player.x,player.y-32)
	
	if gv.gbool["&SUDOKU."..id]
		return 
	end
	plua c = SysVal(pc)
	CSay("Player activates sudoku button: "..id.."/"..tag.."/"..c)
	plua work = Sudoku[id]
	plua ps = work.PlaySolve
	ps[tag][c] = ps[tag][c] + 1
	if ps[tag][c]>work.GroupSize 
		ps[tag][c]=1 
	end
	SudoReTexture2(work.Objects[tag.."C"..c].Symbols,work,tag,c)
	SudoNakijken(id)
end 

// And now a quickpart to get a few things in the new engine.
quickmeta Sudoku_Button
	index
	 void ret(whatever)
	 	Player.Walkto("NPC_SUDO_BUTT_Eugorvnia1."..key)
	 	string ftag = left(key,5)
	 	int fc = SysVal(right(Key,1))
	 	CSayF("Sudoku button: %s; Tag: %s; C: %d ",key,ftag,fc)
	 	SudoButton("Eugorvnia1",ftag,fc)
	 end
	 return ret
	end
end

#endregion



#region main
group MScript

	readonly var NPC_SUDO_BUTT_Eugorvnia1

	void StartRoom()
		if !Done.Welcome_To_Eugorvnia
			MapText("WELCOME")
			Party.GiveEXP(123)
		end
	end
	
	void ShowSecret()
		Map.HideButLabel("ToSecret")
		Map.ShowObj("PLAYER")
		if !Done.Discovered_Road_To_Eugorvia_Caves
			Party.GiveExp(900 div __skill)
		end
	end
	
	void ToSecret()
		Map.GoToMap("Ysperon - Eugorvnia Caves","#000","Start")
	end
	
	void HideSecret()
		Map.ShowButLabel("ToSecret")
	end
	
	void BossRoom()
		static bool Checked
		if Checked
			Return
		end
		if __Facility
			Map.Kill("Trans.Pad.Transporter spot 4FF8737")
			Map.SetObj("Fac_Barrier","W",100)
		else
			Map.Kill("Trans.Pad.Transporter spot 4FB7229")
		end
		Map.HideByLabel("PostBoss")
	end
	
	void Boss()
		Map.SetObj("BossWallThin","H",224+96)
		StartCombat.Foe("Boss/QueenMyr",Map.Level+(__skill-2))
		Map.ShowByLabel("PostBoss")
	end
	
	void ToFacility() 
		var MeanWhile = Image.Load("GFX/MeanWhile/AmberNeon.png")
		__Facility = True
		MeanWhile.HotCenter()
		for a=0,300
			Graphics.Cls()
			Map.DrawScreen()
			__black
			Graphics.SetAlpha(math.min(255,a))
			Graphics.Rect(0,0,Screen.W,Screen.H)
			__white
			Graphics.SetAlpha(255)
			MeanWhile.Draw(Screen.W div 2,Screen.H div 2)
			Graphics.Flip()
			Events.Poll()
			FPS.WaitMinTicks()
		end
		Map.GotoMap("Ysperon - Facility","#999","Wendicka_McLeen")
		Schedule.Add("Wendicka_Intro")
	end
		
			
	
	void Update()
	end

	void Draw()
	end
	
	void Load()
	end
	
	CONSTRUCTOR		
		NPC_SUDO_BUTT_Eugorvnia1 = Sudoku_Button
		//NPC_SUDO_BUTT_Eugorvnia1.Test() // Always dummied in final version!
		ZA.TabEnter{"STARTROOM","ShowSecret","HideSecret","ToSecret","BossRoom", "ToFacility"}
		#pure
		Sudoku.Eugorvnia1 = {
                             SolveRemove = {"Sudo1Solve1","Sudo1Solve2","Sudo1Barrier"},
                             GroupSize = 4,
                             Layer = "#003",
                             Solved = { 
                                          G11R1 = {1,2}, G12R1 = {3,4},
                                          G11R2 = {3,4}, G12R2 = {1,2},
                                          G21R1 = {2,1}, G22R1 = {4,3},
                                          G21R2 = {4,3}, G22R2 = {2,1}
                                          },
                             ZegVoor = { {'G21R2C2'}, -- Easy Only
                                         {'G11R2C2'},                               -- Medium + Easy
                                         {'G11R1C1','G12R2C2','G22R1C1','G21R1C1','G22R1C2'}  -- Hard + Medium + Easy
                                       },
                             Tiles = "Eugorvnia"          
                    }
		#endpure
		InitSudoku("Eugorvnia1")  
		//print(Serialize("Sudoku",Sudoku))
	end

end
#endregion