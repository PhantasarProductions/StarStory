// License Information:
// **********************************************
// 
// src/Tricky Script/Script/MapScript/LostPlanet - Bonus_SpaceObservatorium.neil
// (c) Jeroen Broks, 2021, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 21.03.04
// End License Information

#use "Libs/LinkedList"
#use "Script/Use/Anyway"

#MKL_Version "Star Story - LostPlanet - Bonus_SpaceObservatorium.neil" "21.03.04"
#MKL_Lic     "Star Story - LostPlanet - Bonus_SpaceObservatorium.neil" "Phantasar Closed License"

class Schuifdeur
	readonly int OLX
	readonly int OLY
	readonly int ORX
	readonly int ORY
	int schuif = 0
	get int LX
		return OLX - Schuif
	end
	get int RX
		return ORY + Schuif
	end
	bool Open = false
	void Update()
		if Open
			if Schuif<30
				Schuif++
			end
		else
			if Schuif>0
				Schuif--
			end
		end
	end
	Constructor(string Tag)
		OLX = Map.ObjInt(Tag.."L","X")
		OLY = Map.ObjInt(Tag.."L","Y")
		ORX = Map.ObjInt(Tag.."R","X")
		ORY = Map.ObjInt(Tag.."R","Y")
	end
	
	static Var Lst = new LinkedList
	static Var Tab
	
	static Var Create(string Deur,String Zone="")
		var DeurObject = New SchuifDeur(Deur)
		if Zone!=""
			Tab = Tab || {}
			Tab[Deur] = { ["O"] = NeilLoad(sprintf("MScript.DeurTabel.%s.D.Open = true",Deur)), ["C"] = NeilLoad(sprintf("MScript.DeurTabel.%s.D.Open = false",Deur)), ["D"] = DeurObject }
			ZA.Enter(Zone,sprintf("DeurTabel.%s.O",Deur))
			ZA.Leave(Zone,sprintf("DeurTabel.%s.C",Deur))
		end
		Lst.AddLast(DeurObject)
		return DeurObject
	end
end

group MScript

	readonly var DeurTabel = SchuifDeur.Tab
	readonly var DeurWendicka = SchuifDeur.Create("UnixD1")

	void Welcome()
		if !Done.Entered_Observatorium_Before
			Party.GiveEXP(4500/__skill)
			Map.ActTrans("Observatorium")
		end
	end
	
	void SLabel(string l)
		Map.HideButLabel(l)
		Map.ShowObj("PLAYER")
	end
	
	void Entrance()
		SLabel("Entrance")
	end
	
	void Corridor1()
		SLabel("Corridor1")
	end

	void Update()
	end

	void Draw()
	end
	
	void Load()
	end
	
	CONSTRUCTOR
		ZA.Enter("Transporter","Entrance")
		ZA.TabEnter{"Entrance"}
		for C1 in each{"R","L","U"}
			ZA.Enter("ToCorr1"..C1,"Corridor1")
		end
		SchuifDeur.Create("DtC1R","OpenCorr1R")
		SchuifDeur.Create("DtC1L","OpenCorr1L")
	end

end