// License Information:
// src/Tricky Script/Script/Subs/SubParty.Neil
// Version: 20.10.05
// Copyright (C) 2020 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
#use "Script/Use/Anyway"

#use "script/use/misc/box"

group SubParty

	readonly table StatSubs = {"BASE","POWERUP","UPGRADE","BUFF","END"}
	readonly table Stats = {"AP","Accuracy","Agility","Defense","Evasion","HP","Resistance","Strength","Will" }
	readonly int bw = Screen.w Div 4
	readonly var Fnt = ImageFont.Obtain("BOXTEXT")
	
	get delegate ToNumber
		return Lua.tonumber
	end
	
	get delegate Error
		return Lua.error
	end
	
	void GrabLevel(string tag,int level)
		string n = tag
		if tag == "UniWendicka"
			n = "Wendicka"
		end
		string dat = JCR6.LoadString(sprintf("Data/LvStats/%s/%d",n,math.floor(level/100)))
		table tdat = Split(dat,"\n")
		int lvl = -100
		for line in each(tdat)
			if line!="" 
				table ins = split(line," ")
				switch ins[1]
					case "REM"
						// DO NOTHING!
					case "LEVEL"
						lvl = lua.tonumber(ins[2])
					default
						if prefixed(ins[1],"STAT.") 
							if lvl==level
								string st = right(ins[1],#ins[1]-5)
								RPGChar[Tag].Stat["BASE_"..st] = tonumber(ins[2])
								print("\t= "..st.." for "..tag.." is "..ins[2])
							end
						else
							error("Unknown instruction! >> "..line)
						end
				end
			end
		end
		RPGChar[tag].Points.HP.Have = RPGChar[tag].Points.HP.Maximum
	end

	void NewChar(string Tag,int level,string Name)
		// Todo: Make sure all this is skipped if the character already exists!
		if (Name=="") 
			Name=Tag
		end
		print("Creating character:",Tag,Name)
		RPGChar.Create(Tag,Name)
		// Shoot?
		print("= Can this character shoot?")
		RPGChar[Tag].Data.CanShoot = Lua.tostring(prefixed(tag,"Uni") or tag=="Briggs" or tag=="Yirl")
		if tag=="Briggs"
			print("= Briggs is a guest")
			RPGChar.Briggs.Data.Guest = "true"
		else
			print("= "..Name.." is NOT a guest!")
			RPGChar.Briggs.Data.Guest = "false"
		end
		// Inventory slots
		print("= Setting up inventory")
		for i=1,Caps.InventorySockets
			RPGChar[Tag].Data[sprintf("INVITEM%03d",i)]=""
			RPGChar[Tag].Stat[sprintf("INVAMNT%03d",i)]=0
		end
		// Statistics
		Print("= Setting the basic stat values")
		for st in Each(Stats)
			for sb in Each(StatSubs)
				RPGChar[Tag].Stat[sb.."_"..st] = 0
			end
			string formscript = "SUM:"..Tag
			for sb in Each(StatSubs)
				if sb!="END" 
					formscript += "."..sb.."_"..st
				end
				RPGChar[Tag].StatScript["END_"..st] = formscript
			end
		end
		RPGChar[Tag].Stat.AMMO = 0
		RPGChar[Tag].Stat.Level = level
		// A few basic lists
		table lists = { "ABL","LEARN","ABL_POWERUP","STATUSCHANGE" }
		if Tag=="Crystal"
			lists += "ARMS"
		end
		for lst in Each(lists)
			CSayF("= List checkup %s, should have no members: %d!",lst,RPGChar[Tag].List[lst].len)
		end
		// TODO: Script "END" stat!
		// Basis Points
		Print("= Setting the basic points")
		RPGChar[Tag].Points.HP.MaxCopy = "END_HP"
		RPGChar[Tag].Points.AP.MaxCopy = "END_AP"
		RPGChar[Tag].Points.AMMO.MaxCopy = "AMMO"
		RPGChar[Tag].Points.EXP.Max = Caps.NeedEXP
		print("= Grabbing level: "..level)
		GrabLevel(Tag,level)
		print("= NEXT comes later!")
	end
	
	readonly table Portretten
	
	var GetPortret(string Tag)
		if not Portretten[Tag]			
			string File
			switch Tag
				case "UniWendicka"
					File = "GFX/PORTRET/Wendicka/Uniform.png"
				case "UniCrystal"
					File = "GFX/PORTRET/Crystal/Uniform.png"
				default
					File = "GFX/PORTRET/"..Tag.."/General.png"
			end
			Portretten[Tag] = Image.LoadNew(File,"PORTRET_"..Tag)
			Portretten[Tag].Hot(5,Portretten[Tag].Height)
		end
		return Portretten[Tag]
	end

	
	void Boxes()
		Box.DrawAll()
		for i=1,3
			if RPGParty[i]!=""
				string tag = RPGParty[i]
				int x= (i-1)*bw
				int y = Screen.H-100
				GetPortret(tag).Draw(x,Screen.h)
				int g = math.floor((RPGChar[Tag].Points.HP.Have/RPGChar[Tag].Points.HP.Maximum)*255)
				// print(255-g,g,0," HP ",RPGChar[Tag].Points.HP.Have,RPGChar[Tag].Points.HP.Maximum)
				Graphics.Color((255-g),g,0)
				StatBar(x+150,y+30,(bw)-160,3,RPGChar[Tag].Points.HP.Have,RPGChar[Tag].Points.HP.Maximum)
				Fnt.Text("HP",x+100,y+10)
				Fnt.Text(RPGChar[Tag].Points.HP.Have,(x+bw)-10,y+10,1,0)
				if RPGChar[Tag].Points.AP.Maximum>0
					g = math.floor((RPGChar[Tag].Points.AP.Have/RPGChar[Tag].Points.AP.Maximum)*100)
					graphics.Color(0,g+80,g+155)
					StatBar(x+150,y+60,(bw)-160,3,RPGChar[Tag].Points.AP.Have,RPGChar[Tag].Points.AP.Maximum)
					Fnt.Text("AP",x+100,y+40)
					Fnt.Text(RPGChar[Tag].Points.AP.Have,(x+bw)-10,y+40,1,0)
				end
				__white
				if Tag!="Briggs"
					StatBar(x+150,y+90,(bw)-160,3,RPGChar[Tag].Points.EXP.Have,RPGChar[Tag].Points.EXP.Maximum)
				end
				Fnt.Text("Lv",x+100,y+70)
				Fnt.Text(RPGChar[Tag].Stat.Level,(x+bw)-10,y+70,1,0)
				for j=1,2
					if Events.MouseHit(j)
						if Events.MouseX()>x and Events.MouseY()>y and Events.MouseX()<x+bw
							CSayF("CallBack(%s)::%s(%s)",Flow.Current,"Party.CallBack",lua.tostring(j),Tag)
							State.Call(Flow.Current,"Party.CallBack",""..j..",\""..Tag.."\"")
						end
					end
				end
			end
		end
	end
	
	CONSTRUCTOR		
		for i=0,3
			var t = new Box(i*bw,screen.H-100,bw,100,true)
			cout("Box created: (",t.x,",",t.y,")\t",t.w,"x",t.h,"\n")
		end
	end


end
