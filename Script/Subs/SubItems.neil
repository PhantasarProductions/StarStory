// License Information:
// src/Tricky Script/Script/Subs/SubItems.neil
// Version: 20.10.14
// Copyright (C) 2020 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

#use "Script/Use/Anyway"
#use "Script/Data/IAA/MyData_ClassFile_IAA"

table ItemData


global var ItemBaseGet(string it,string key)
	it = it:upper()
	ItemData[it] = ItemData[it] || NeilUse("Script/Data/IAA/"..it)
	return ItemData[it][key]
end


global bool S_GiveItem(string it,string char)
	var C = RPGChar[char]
	var D = C.Data
	var S = C.Stat
	if char=="Briggs"
		return false
	end
	
	int FirstEmptyInvSocket()
		int i=0
		repeat
			i++
			string stag = sprintf("INVAMNT%d",i)
			if s[stag]<=0
				return i
			end
		until i>Caps.InventorySockets 
		return -1
	end

	bool ok = false
	int i=0
	string dtag
	string stag
	it = it:upper()
	repeat
		i++
		dtag = sprintf("INVITEM%d",i)
		stag = sprintf("INVAMNT%d",i)
		if i>Caps.InventorySockets 
			i = FirstEmptyInvSocket()
			if i<0
				return false
			end
			dtag = sprintf("INVITEM%d",i)
			stag = sprintf("INVAMNT%d",i)
			ok = true
		else
			ok = it == D[dtag]:upper() && S[stag]<Caps.InventoryMaxStack
		end
	until ok
	S[stag]++
	D[dtag]=it
	CSayF("Item %s assigned to [%s/%s] - Amount is now: %2d",it,stag,dtag,S[stag])
	return ok
end


init
	Lua.ItemBaseGet = ItemBaseGet
	Lua.S_GiveItem = S_GiveItem
end
